{
  "openapi": "3.0.3",
  "info": {
    "title": "Support PNPG API service",
    "description": "This service acts as an orchestrator for information coming from different services and as a proxy",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://${host}/${basePath}"
    }
  ],
  "tags": [
    {
      "name": "Institution",
      "description": "Institution V 2 Controller"
    },
    {
      "name": "User",
      "description": "User V 2 Controller"
    },
    {
      "name": "UserGroup",
      "description": "User group endpoint CRUD operations"
    }
  ],
  "paths": {
    "/institutions": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "Gets institutions filtering by taxCode and/or subunitCode",
        "description": "Gets institutions filtering by taxCode and/or subunitCode",
        "operationId": "getInstitutionsUsingGET",
        "parameters": [
          {
            "name": "taxCode",
            "in": "query",
            "description": "Institution's tax code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subunitCode",
            "in": "query",
            "description": "Institution's subunit code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "origin",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "originId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enableSubunits",
            "in": "query",
            "description": "enableSubunits",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{id}": {
      "put": {
        "tags": [
          "Institution"
        ],
        "summary": "update institution data of given institution",
        "description": "update institution data of given institution",
        "operationId": "updateInstitutionUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal identifier of the institution",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionPut"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/users": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "Retrieve user's information including product role details",
        "description": "Fetches detailed information about users associated with a specific institution, including their roles on various products. This endpoint is useful for administrators to obtain comprehensive user-role mappings within an institution.",
        "operationId": "getInstitutionUsersUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve user information by userId and optional ProductId",
        "description": "Retrieves user given userId and optional ProductId",
        "operationId": "getUserInfoUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "institutionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/info-camere/institutions": {
      "post": {
        "tags": [
          "infocamere"
        ],
        "summary": "Get institutions by legal tax id",
        "description": "Get the list of companies represented by the tax code of the person (physical or juridical) passed as a parameter",
        "operationId": "institutionsByLegalTaxIdUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInstitutionsByLegalDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessesResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/national-registries/legal-address": {
      "get": {
        "tags": [
          "national-registries"
        ],
        "summary": "Retrieve legal address data from InfoCamere",
        "description": "Get the legal address of the business given the taxId",
        "operationId": "legalAddress",
        "parameters": [
          {
            "name": "taxId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/national-registries/legal-tax/verification": {
      "post": {
        "tags": [
          "NationalRegistry"
        ],
        "summary": "verifyLegal",
        "description": "Verify if given taxId is legal of given institution identified with vatNumber",
        "operationId": "verifyLegalByPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalVerificationResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "getUserInfo",
        "description": "Service to retrieve user info including institutions and products linked to him, this service retrives 100 institutions at most",
        "operationId": "V2getUserInfoUsingGET",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/user-groups": {
      "get": {
        "tags": [
          "UserGroup"
        ],
        "summary": "getUserGroups",
        "description": "Service that allows to get a list of UserGroup entities",
        "operationId": "getUserGroupsUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "query",
            "description": "Users group's institutionId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to access (0 indexed, defaults to 0)",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page (defaults to 20, max 2000)",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Users group's productId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Member's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "If filter on status is present, it must be used with at least one of the other filters",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "DELETED",
                "SUSPENDED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOfUserGroupResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "InstitutionsResponse": {
        "title": "InstitutionsResponse",
        "type": "object",
        "properties": {
          "institutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstitutionResponse"
            }
          }
        }
      },
      "InstitutionResponse": {
        "title": "InstitutionResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "aooParentCode": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributesResponse"
            }
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DataProtectionOfficerResponse"
          },
          "delegation": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoTaxonomies"
            }
          },
          "id": {
            "type": "string"
          },
          "imported": {
            "type": "boolean"
          },
          "institutionType": {
            "type": "string"
          },
          "isTest": {
            "type": "boolean"
          },
          "istatCode": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "onboarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardedProductResponse"
            }
          },
          "origin": {
            "type": "string"
          },
          "originId": {
            "type": "string"
          },
          "paymentServiceProvider": {
            "$ref": "#/components/schemas/PaymentServiceProviderResponse"
          },
          "rea": {
            "type": "string"
          },
          "rootParent": {
            "$ref": "#/components/schemas/RootParentResponse"
          },
          "shareCapital": {
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "AttributesResponse": {
        "title": "AttributesResponse",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          }
        }
      },
      "DataProtectionOfficerResponse": {
        "title": "DataProtectionOfficerResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "pec": {
            "type": "string"
          }
        }
      },
      "GeoTaxonomies": {
        "title": "GeoTaxonomies",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          }
        }
      },
      "OnboardedProductResponse": {
        "title": "OnboardedProductResponse",
        "type": "object",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/BillingResponse1"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isAggregator": {
            "type": "boolean"
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED",
              "PENDING",
              "REJECTED",
              "SUSPENDED",
              "TOBEVALIDATED"
            ]
          },
          "tokenId": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BillingResponse1": {
        "title": "BillingResponse",
        "type": "object",
        "properties": {
          "publicServices": {
            "type": "boolean"
          },
          "recipientCode": {
            "type": "string"
          },
          "taxCodeInvoicing": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProviderResponse": {
        "title": "PaymentServiceProviderResponse",
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string"
          },
          "businessRegisterNumber": {
            "type": "string"
          },
          "legalRegisterName": {
            "type": "string"
          },
          "legalRegisterNumber": {
            "type": "string"
          },
          "vatNumberGroup": {
            "type": "boolean"
          }
        }
      },
      "RootParentResponse": {
        "title": "RootParentResponse",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Human-readable description of this specific problem."
          },
          "instance": {
            "type": "string",
            "description": "A URI that describes where the problem occurred."
          },
          "invalidParams": {
            "type": "array",
            "description": "A list of invalid parameters details.",
            "items": {
              "$ref": "#/components/schemas/InvalidParam"
            }
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code.",
            "format": "int32",
            "example": 500
          },
          "title": {
            "type": "string",
            "description": "Short human-readable summary of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URL to a page with more details regarding the problem."
          }
        },
        "description": "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      },
      "InvalidParam": {
        "title": "InvalidParam",
        "required": [
          "name",
          "reason"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Invalid parameter name."
          },
          "reason": {
            "type": "string",
            "description": "Invalid parameter reason."
          }
        }
      },
      "InstitutionPut": {
        "title": "InstitutionPut",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "geographicTaxonomyCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "onboardings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardingPut"
            }
          },
          "parentDescription": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "OnboardingPut": {
        "title": "OnboardingPut",
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          }
        }
      },
      "UserProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardedProductResponse1"
            }
          }
        }
      },
      "OnboardedProductResponse1": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/OnboardedProductState"
          },
          "productRole": {
            "type": "string"
          },
          "role": {
            "description": "Available values: MANAGER, DELEGATE, SUB_DELEGATE, OPERATOR, ADMIN_EA",
            "type": "string"
          },
          "env": {
            "$ref": "#/components/schemas/Env"
          },
          "createdAt": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        }
      },
      "OnboardedProductState": {
        "enum": [
          "ACTIVE",
          "PENDING",
          "TOBEVALIDATED",
          "SUSPENDED",
          "DELETED",
          "REJECTED"
        ],
        "type": "string"
      },
      "Env": {
        "enum": [
          "ROOT",
          "DEV",
          "COLL",
          "PROD"
        ],
        "type": "string"
      },
      "OffsetDateTime": {
        "format": "date-time",
        "type": "string",
        "example": "2022-03-10T12:15:50-04:00"
      },
      "Problem1": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "invalidParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvalidParam1"
            }
          },
          "status": {
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "InvalidParam1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "required": [
          "id",
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "name": {
            "pattern": "\\S",
            "type": "string"
          },
          "surname": {
            "pattern": "\\S",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "workContacts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BusinessesResource": {
        "type": "object",
        "properties": {
          "requestDateTime": {
            "type": "string"
          },
          "legalTaxId": {
            "type": "string"
          },
          "businesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessResource"
            }
          }
        }
      },
      "BusinessResource": {
        "type": "object",
        "properties": {
          "businessTaxId": {
            "type": "string"
          },
          "businessName": {
            "type": "string"
          }
        }
      },
      "GetInstitutionsByLegalDto": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/GetInstitutionsByLegalFilterDto"
          }
        }
      },
      "GetInstitutionsByLegalFilterDto": {
        "type": "object",
        "properties": {
          "legalTaxId": {
            "type": "string"
          }
        }
      },
      "LegalAddressResponse": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "LegalVerificationResource": {
        "title": "LegalVerificationResource",
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string"
          },
          "resultDetail": {
            "type": "string"
          },
          "verificationResult": {
            "type": "boolean"
          }
        }
      },
      "VerifyRequestDto": {
        "title": "VerifyRequestDto",
        "required": [
          "taxId",
          "vatNumber"
        ],
        "type": "object",
        "properties": {
          "taxId": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          }
        }
      },
      "UserInfoResource": {
        "title": "UserInfoResource",
        "type": "object",
        "properties": {
          "onboardedInstitutions": {
            "type": "array",
            "description": "Object that includes all info about onboarded institutions linked to a user",
            "items": {
              "$ref": "#/components/schemas/OnboardedInstitutionResource"
            }
          },
          "user": {
            "description": "Object that includes all info about a user",
            "$ref": "#/components/schemas/UserResource"
          }
        }
      },
      "OnboardedInstitutionResource": {
        "title": "OnboardedInstitutionResource",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Institution's address"
          },
          "description": {
            "type": "string",
            "description": "Institution's description"
          },
          "digitalAddress": {
            "type": "string",
            "description": "Institution's digital address"
          },
          "id": {
            "type": "string",
            "description": "Institution's Id"
          },
          "institutionType": {
            "type": "string",
            "description": "Institution's type",
            "enum": [
              "AS",
              "CON",
              "GPU",
              "GSP",
              "PA",
              "PG",
              "PRV",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "productInfo": {
            "description": "Products' info of onboardings",
            "$ref": "#/components/schemas/ProductInfo"
          },
          "state": {
            "type": "string",
            "description": "Onboarding's state"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's tax code"
          },
          "userEmail": {
            "type": "string",
            "description": "User's email linked to the institution"
          },
          "zipCode": {
            "type": "string",
            "description": "Institution's zip code"
          }
        }
      },
      "ProductInfo": {
        "title": "ProductInfo",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "productRole": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UserResource": {
        "title": "UserResource",
        "required": [
          "id",
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's institutional email"
          },
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "id": {
            "type": "string",
            "description": "User's unique identifier",
            "format": "uuid"
          },
          "lastActiveOnboardingUserEmail": {
            "type": "string",
            "description": "User's last active onboarding used email"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "ADMIN_EA",
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "roles": {
            "type": "array",
            "description": "User's roles in product",
            "items": {
              "type": "string"
            }
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          }
        }
      },
      "SearchUserDto": {
        "title": "SearchUserDto",
        "required": [
          "fiscalCode"
        ],
        "type": "object",
        "properties": {
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "statuses": {
            "type": "array",
            "description": "User's statuses",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "DELETED",
                "PENDING",
                "REJECTED",
                "SUSPENDED",
                "TOBEVALIDATED"
              ]
            }
          }
        }
      },
      "PageOfUserGroupResource": {
        "title": "PageOfUserGroupResource",
        "required": [
          "content",
          "number",
          "size",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "The page content",
            "items": {
              "$ref": "#/components/schemas/UserGroupResource"
            }
          },
          "number": {
            "type": "integer",
            "description": "The number of the current page",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "The size of the page",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "description": "The total amount of elements",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "description": "The number of total pages",
            "format": "int32"
          }
        }
      },
      "UserGroupResource": {
        "title": "UserGroupResource",
        "required": [
          "description",
          "id",
          "institutionId",
          "name",
          "productId",
          "status"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Date on which the group was created",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "User by which the group was created"
          },
          "description": {
            "type": "string",
            "description": "Users group's description"
          },
          "id": {
            "type": "string",
            "description": "Users group's unique identifier"
          },
          "institutionId": {
            "type": "string",
            "description": "Users group's institutionId"
          },
          "members": {
            "type": "array",
            "description": "List of all the members of the group",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "modifiedAt": {
            "type": "string",
            "description": "Date on which the group was modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": "User by which the group was modified"
          },
          "name": {
            "type": "string",
            "description": "Users group's name"
          },
          "productId": {
            "type": "string",
            "description": "Users group's productId"
          },
          "status": {
            "type": "string",
            "description": "Users group's status",
            "enum": [
              "ACTIVE",
              "DELETED",
              "SUSPENDED"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      }
    }
  }
}