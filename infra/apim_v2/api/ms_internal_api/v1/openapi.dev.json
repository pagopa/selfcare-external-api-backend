{
  "openapi": "3.0.3",
  "info": {
    "title": "Internal API service",
    "description": "This service acts as an orchestrator for information coming from different services and as a proxy",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://${host}/${basePath}"
    }
  ],
  "tags": [
    {
      "name": "Institution",
      "description": "Institution V 2 Controller"
    },
    {
      "name": "Onboarding",
      "description": "Onboarding V 2 Controller"
    },
    {
      "name": "User",
      "description": "User V 2 Controller"
    },
    {
      "name": "Delegation",
      "description": "Delegation Controller"
    }
  ],
  "paths": {
    "/delegations/from-taxcode": {
      "post": {
        "tags": [
          "Delegation"
        ],
        "summary": "Create an association between institution and technical partner using taxCode for both instead of internal id. It is useful when we don't know institution's internal id.",
        "description": "Create an association between institution and technical partner using taxCode for both instead of internal id. It is useful when we don't know institution's internal id.",
        "operationId": "createDelegationFromInstitutionsTaxCodeUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelegationRequestFromTaxcode"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{id}": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "Gets the corresponding institution using internal institution id",
        "description": "Gets the corresponding institution using internal institution id",
        "operationId": "retrieveInstitutionByIdUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal identifier of the institution",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/createdAt": {
      "put": {
        "tags": [
          "Institution"
        ],
        "summary": "The service updates the createdAt field for the institution-product pair",
        "description": "The service updates the createdAt field for the institution-product pair",
        "operationId": "updateCreatedAtUsingPUT",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "The internal identifier of the institution",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatedAtRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/users/{id}/status": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user status with optional filter for institution, product, role and productRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "institutionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productRole",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PartyRole"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OnboardedProductState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/users": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "getInstitutionUsersByProduct",
        "description": "Service to get all the active users related to a specific pair of institution-product",
        "operationId": "getInstitutionUsersByProductUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique internal Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Product's unique identifier",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productRoles",
            "in": "query",
            "description": "User's roles in product",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-selfcare-uid",
            "in": "header",
            "description": "x-selfcare-uid",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding": {
      "post": {
        "tags": [],
        "summary": "onboarding",
        "description": "The service allows the onboarding of Users to a subunit of an Institution",
        "operationId": "onboardingUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/users": {
      "post": {
        "tags": [
          "Onboarding"
        ],
        "summary": "The service adds users to the registry if they are not present and associates them with the institution and product contained in the body",
        "description": "The service adds users to the registry if they are not present and associates them with the institution and product contained in the body",
        "operationId": "onboardingInstitutionUsersUsingPOST",
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "object"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingInstitutionUsersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationshipResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/{onboardingId}/complete": {
      "put": {
        "tags": [],
        "summary": "Perform complete operation of an onboarding request receiving onboarding id and contract signed by the institution.It checks the contract's signature and upload the contract on an azure storageAt the end, function triggers async activities related to complete onboarding that consist of create the institution, activate the onboarding and sending data to notification queue.",
        "parameters": [
          {
            "name": "onboardingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "contract"
                ],
                "type": "object",
                "properties": {
                  "contract": {
                    "format": "binary",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/{onboardingId}/consume": {
      "put": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Perform complete operation of an onboarding request as /complete but without signature verification of the contract",
        "parameters": [
          {
            "name": "onboardingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "contract"
                ],
                "type": "object",
                "properties": {
                  "contract": {
                    "format": "binary",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "DelegationResponse": {
        "title": "DelegationResponse",
        "type": "object",
        "properties": {
          "brokerId": {
            "type": "string"
          },
          "brokerName": {
            "type": "string"
          },
          "brokerTaxCode": {
            "type": "string"
          },
          "brokerType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "institutionId": {
            "type": "string"
          },
          "institutionName": {
            "type": "string"
          },
          "institutionRootName": {
            "type": "string"
          },
          "institutionType": {
            "type": "string",
            "enum": [
              "AS",
              "CON",
              "GSP",
              "PA",
              "PG",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED"
            ]
          },
          "taxCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "AOO",
              "EA",
              "PT"
            ]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Problem1": {
        "title": "Problem",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemError"
            }
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProblemError": {
        "title": "ProblemError",
        "type": "object"
      },
      "DelegationRequestFromTaxcode": {
        "title": "DelegationRequestFromTaxcode",
        "type": "object",
        "properties": {
          "fromSubunitCode": {
            "type": "string"
          },
          "fromTaxCode": {
            "type": "string"
          },
          "institutionFromName": {
            "type": "string"
          },
          "institutionToName": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "toSubunitCode": {
            "type": "string"
          },
          "toTaxCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "AOO",
              "EA",
              "PT"
            ]
          }
        }
      },
      "InstitutionResponse": {
        "title": "InstitutionResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "aooParentCode": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributesResponse"
            }
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DataProtectionOfficerResponse"
          },
          "delegation": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoTaxonomies"
            }
          },
          "id": {
            "type": "string"
          },
          "imported": {
            "type": "boolean"
          },
          "institutionType": {
            "type": "string",
            "enum": [
              "AS",
              "CON",
              "GSP",
              "PA",
              "PG",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "istatCode": {
            "type": "string"
          },
          "onboarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardedProductResponse"
            }
          },
          "origin": {
            "type": "string"
          },
          "originId": {
            "type": "string"
          },
          "paymentServiceProvider": {
            "$ref": "#/components/schemas/PaymentServiceProviderResponse"
          },
          "rea": {
            "type": "string"
          },
          "rootParent": {
            "$ref": "#/components/schemas/RootParentResponse"
          },
          "shareCapital": {
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "AttributesResponse": {
        "title": "AttributesResponse",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          }
        }
      },
      "DataProtectionOfficerResponse": {
        "title": "DataProtectionOfficerResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "pec": {
            "type": "string"
          }
        }
      },
      "GeoTaxonomies": {
        "title": "GeoTaxonomies",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          }
        }
      },
      "OnboardedProductResponse": {
        "title": "OnboardedProductResponse",
        "type": "object",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/BillingResponse1"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isAggregator": {
            "type": "boolean"
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED",
              "PENDING",
              "REJECTED",
              "SUSPENDED",
              "TOBEVALIDATED"
            ]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BillingResponse1": {
        "title": "BillingResponse",
        "type": "object",
        "properties": {
          "publicServices": {
            "type": "boolean"
          },
          "recipientCode": {
            "type": "string"
          },
          "taxCodeInvoicing": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProviderResponse": {
        "title": "PaymentServiceProviderResponse",
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string"
          },
          "businessRegisterNumber": {
            "type": "string"
          },
          "legalRegisterName": {
            "type": "string"
          },
          "legalRegisterNumber": {
            "type": "string"
          },
          "vatNumberGroup": {
            "type": "boolean"
          }
        }
      },
      "RootParentResponse": {
        "title": "RootParentResponse",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "CreatedAtRequest": {
        "title": "CreatedAtRequest",
        "type": "object",
        "properties": {
          "activatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "string"
          }
        }
      },
      "PartyRole": {
        "enum": [
          "MANAGER",
          "DELEGATE",
          "SUB_DELEGATE",
          "OPERATOR",
          "ADMIN_EA"
        ],
        "type": "string"
      },
      "OnboardedProductState": {
        "enum": [
          "ACTIVE",
          "PENDING",
          "TOBEVALIDATED",
          "SUSPENDED",
          "DELETED",
          "REJECTED"
        ],
        "type": "string"
      },
      "UserResource": {
        "title": "UserResource",
        "required": [
          "id",
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's institutional email"
          },
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "id": {
            "type": "string",
            "description": "User's unique identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "roles": {
            "type": "array",
            "description": "User's roles in product",
            "items": {
              "type": "string"
            }
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Human-readable description of this specific problem."
          },
          "instance": {
            "type": "string",
            "description": "A URI that describes where the problem occurred."
          },
          "invalidParams": {
            "type": "array",
            "description": "A list of invalid parameters details.",
            "items": {
              "$ref": "#/components/schemas/InvalidParam"
            }
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code.",
            "format": "int32",
            "example": 500
          },
          "title": {
            "type": "string",
            "description": "Short human-readable summary of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URL to a page with more details regarding the problem."
          }
        },
        "description": "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      },
      "InvalidParam": {
        "title": "InvalidParam",
        "required": [
          "name",
          "reason"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Invalid parameter name."
          },
          "reason": {
            "type": "string",
            "description": "Invalid parameter reason."
          }
        }
      },
      "OnboardingProductDto": {
        "title": "OnboardingProductDto",
        "required": [
          "geographicTaxonomies",
          "institutionType",
          "productId",
          "users"
        ],
        "type": "object",
        "properties": {
          "assistanceContacts": {
            "description": "Institution's assistance contacts",
            "$ref": "#/components/schemas/AssistanceContactsDto"
          },
          "billingData": {
            "description": "Institution's billing information",
            "$ref": "#/components/schemas/BillingDataDto"
          },
          "companyInformations": {
            "description": "GPS, SCP, PT optional data",
            "$ref": "#/components/schemas/CompanyInformationsDto"
          },
          "geographicTaxonomies": {
            "type": "array",
            "description": "List of geographic Taxonomies",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomyDto"
            }
          },
          "institutionLocationData": {
            "description": "Institution's location Data",
            "$ref": "#/components/schemas/InstitutionLocationDataDto"
          },
          "institutionType": {
            "type": "string",
            "description": "Institution's type",
            "enum": [
              "AS",
              "CON",
              "GSP",
              "PA",
              "PG",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "origin": {
            "type": "string",
            "description": "Institution data origin"
          },
          "originId": {
            "type": "string",
            "description": "Institution's details origin Id"
          },
          "pricingPlan": {
            "type": "string",
            "description": "Product's pricing plan"
          },
          "productId": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "pspData": {
            "description": "Payment Service Provider (PSP) specific data",
            "$ref": "#/components/schemas/PspDataDto"
          },
          "subunitCode": {
            "type": "string",
            "description": "Institutions AOO/UO unit Code"
          },
          "subunitType": {
            "type": "string",
            "description": "Institutions AOO/UO unit type"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's taxCode"
          },
          "users": {
            "type": "array",
            "description": "List of onboarding users",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        }
      },
      "AssistanceContactsDto": {
        "title": "AssistanceContactsDto",
        "type": "object",
        "properties": {
          "supportEmail": {
            "type": "string",
            "description": "Institution's support email contact",
            "format": "email",
            "example": "email@example.com"
          },
          "supportPhone": {
            "type": "string",
            "description": "Institution's support phone contact"
          }
        }
      },
      "BillingDataDto": {
        "title": "BillingDataDto",
        "required": [
          "businessName",
          "digitalAddress",
          "registeredOffice"
        ],
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "description": "Institution's legal name"
          },
          "digitalAddress": {
            "type": "string",
            "description": "Institution's digitalAddress"
          },
          "publicServices": {
            "type": "boolean",
            "description": "Institution's service type",
            "example": false
          },
          "recipientCode": {
            "type": "string",
            "description": "Billing recipient code, not required only for institutionType SA"
          },
          "registeredOffice": {
            "type": "string",
            "description": "Institution's physical address"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's taxCode"
          },
          "taxCodeInvoicing": {
            "type": "string",
            "description": "Institution's taxCodeInvoicing"
          },
          "vatNumber": {
            "type": "string",
            "description": "Institution's VAT number"
          },
          "zipCode": {
            "type": "string",
            "description": "Institution's zipCode"
          }
        }
      },
      "CompanyInformationsDto": {
        "title": "CompanyInformationsDto",
        "type": "object",
        "properties": {
          "businessRegisterPlace": {
            "type": "string",
            "description": "Institution's business register place"
          },
          "rea": {
            "type": "string",
            "description": "Institution's REA"
          },
          "shareCapital": {
            "type": "string",
            "description": "Institution's share capital value"
          }
        }
      },
      "GeographicTaxonomyDto": {
        "title": "GeographicTaxonomyDto",
        "required": [
          "code",
          "desc"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Institution's geographic taxonomy ISTAT code"
          },
          "desc": {
            "type": "string",
            "description": "Institution's geographic taxonomy extended name"
          }
        }
      },
      "InstitutionLocationDataDto": {
        "title": "InstitutionLocationDataDto",
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "Institution's physical address city"
          },
          "country": {
            "type": "string",
            "description": "Institution's physical address country"
          },
          "county": {
            "type": "string",
            "description": "Institution's physical address county"
          }
        }
      },
      "PspDataDto": {
        "title": "PspDataDto",
        "required": [
          "abiCode",
          "businessRegisterNumber",
          "dpoData",
          "legalRegisterName",
          "legalRegisterNumber",
          "vatNumberGroup"
        ],
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string",
            "description": "PSP's ABI code"
          },
          "businessRegisterNumber": {
            "type": "string",
            "description": "PSP's Business Register number"
          },
          "dpoData": {
            "description": "Data Protection Officer (DPO) specific data",
            "$ref": "#/components/schemas/DpoDataDto"
          },
          "legalRegisterName": {
            "type": "string",
            "description": "PSP's legal register name"
          },
          "legalRegisterNumber": {
            "type": "string",
            "description": "PSP's legal register number"
          },
          "vatNumberGroup": {
            "type": "boolean",
            "description": "PSP's Vat Number group",
            "example": false
          }
        }
      },
      "DpoDataDto": {
        "title": "DpoDataDto",
        "required": [
          "address",
          "email",
          "pec"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "DPO's address"
          },
          "email": {
            "type": "string",
            "description": "DPO's email",
            "format": "email",
            "example": "email@example.com"
          },
          "pec": {
            "type": "string",
            "description": "DPO's PEC",
            "format": "email",
            "example": "email@example.com"
          }
        }
      },
      "UserDto": {
        "title": "UserDto",
        "required": [
          "email",
          "name",
          "role",
          "surname",
          "taxCode"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "email@example.com"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          },
          "taxCode": {
            "type": "string",
            "description": "User's fiscal code"
          }
        }
      },
      "RelationshipResult": {
        "title": "RelationshipResult",
        "type": "object",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/BillingResponse"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "from": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "institutionUpdate": {
            "$ref": "#/components/schemas/InstitutionUpdateResponse"
          },
          "pricingPlan": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProductInfo"
          },
          "role": {
            "type": "string",
            "enum": [
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED",
              "PENDING",
              "REJECTED",
              "SUSPENDED",
              "TOBEVALIDATED"
            ]
          },
          "to": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BillingResponse": {
        "title": "BillingResponse",
        "type": "object",
        "properties": {
          "publicServices": {
            "type": "boolean"
          },
          "recipientCode": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          }
        }
      },
      "InstitutionUpdateResponse": {
        "title": "InstitutionUpdateResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DpoDataResource"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imported": {
            "type": "boolean"
          },
          "institutionType": {
            "type": "string",
            "enum": [
              "AS",
              "CON",
              "GSP",
              "PA",
              "PG",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "paymentServiceProvider": {
            "$ref": "#/components/schemas/PspDataResource"
          },
          "rea": {
            "type": "string"
          },
          "shareCapital": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "DpoDataResource": {
        "title": "DpoDataResource",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "DPO's address"
          },
          "email": {
            "type": "string",
            "description": "DPO's email"
          },
          "pec": {
            "type": "string",
            "description": "DPO's PEC"
          }
        }
      },
      "PspDataResource": {
        "title": "PspDataResource",
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string",
            "description": "PSP's ABI code"
          },
          "businessRegisterNumber": {
            "type": "string",
            "description": "PSP's Business Register number"
          },
          "legalRegisterName": {
            "type": "string",
            "description": "PSP's legal register name"
          },
          "legalRegisterNumber": {
            "type": "string",
            "description": "PSP's legal register number"
          },
          "vatNumberGroup": {
            "type": "boolean",
            "description": "PSP's Vat Number group",
            "example": false
          }
        }
      },
      "ProductInfo": {
        "title": "ProductInfo",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "productRole": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "OnboardingInstitutionUsersRequest": {
        "title": "OnboardingInstitutionUsersRequest",
        "type": "object",
        "properties": {
          "institutionSubunitCode": {
            "type": "string"
          },
          "institutionTaxCode": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "sendCreateUserNotificationEmail": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          }
        }
      },
      "Person": {
        "title": "Person",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "env": {
            "type": "string",
            "enum": [
              "COLL",
              "DEV",
              "PROD",
              "ROOT"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productRole": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "roleLabel": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}