{
  "openapi": "3.0.3",
  "info": {
    "title": "Internal API service",
    "description": "This service acts as an orchestrator for information coming from different services and as a proxy",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://${host}/${basePath}"
    }
  ],
  "tags": [
    {
      "name": "Institution",
      "description": "Institution V 2 Controller"
    },
    {
      "name": "Onboarding",
      "description": "Onboarding V 2 Controller"
    },
    {
      "name": "User",
      "description": "User V 2 Controller"
    },
    {
      "name": "Delegation",
      "description": "Delegation Controller"
    },
    {
      "name": "Onboarding Controller"
    }
  ],
  "paths": {
    "/delegations/from-taxcode": {
      "post": {
        "tags": [
          "Delegation"
        ],
        "summary": "Create an association between institution and technical partner using taxCode for both instead of internal id. It is useful when we don't know institution's internal id.",
        "description": "Create an association between institution and technical partner using taxCode for both instead of internal id. It is useful when we don't know institution's internal id.",
        "operationId": "createDelegationFromInstitutionsTaxCodeUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelegationRequestFromTaxcode"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{id}": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "Gets the corresponding institution using internal institution id",
        "description": "Gets the corresponding institution using internal institution id",
        "operationId": "retrieveInstitutionByIdUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal identifier of the institution",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/created-at": {
      "put": {
        "tags": [
          "Institution"
        ],
        "summary": "The service updates the createdAt field for the institution-product pair",
        "description": "The service updates the createdAt field for the institution-product pair",
        "operationId": "updateCreatedAtUsingPUT",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "The internal identifier of the institution",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatedAtRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/users/{id}/status": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a user's product status with optional filters",
        "description": "Update user status with optional filter for institution, product, role and productRole",
        "operationId": "updateUserStatusUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "institutionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productRole",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "schema": {
              "description": "Available values: MANAGER, DELEGATE, SUB_DELEGATE, OPERATOR, ADMIN_EA",
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OnboardedProductState"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/uo/{codiceUniUo}": {
      "get": {
        "tags": [
          "uo-controller"
        ],
        "summary": "Retrieve a UO given its code",
        "description": "Returns a UO",
        "operationId": "findUoByUnicodeUsingGET",
        "parameters": [
          {
            "name": "codiceUniUo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UOResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/infocamere-pdnd/institution/{taxCode}": {
      "get": {
        "tags": [
          "infocamere-pdnd"
        ],
        "summary": "Get institution by institution taxCode",
        "description": "Get the company represented by taxCode of the institution passed as a parameter",
        "operationId": "institutionPdndByTaxCodeUsingGET",
        "parameters": [
          {
            "name": "taxCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PDNDBusinessResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/aoo/{codiceUniAoo}": {
      "get": {
        "tags": [
          "aoo-controller"
        ],
        "summary": "Retrieve an AOO given its code",
        "description": "Returns an AOO",
        "operationId": "findAOOByUnicodeUsingGET",
        "parameters": [
          {
            "name": "codiceUniAoo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AOOResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/users": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "getInstitutionUsersByProduct",
        "description": "Service to get all the active users related to a specific pair of institution-product",
        "operationId": "getInstitutionUsersByProductUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique internal Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Product's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productRoles",
            "in": "query",
            "description": "Specific role of the user related to the product.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-selfcare-uid",
            "in": "header",
            "description": "x-selfcare-uid",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding": {
      "post": {
        "tags": [],
        "summary": "onboarding",
        "description": "The service allows the onboarding of Users to a subunit of an Institution",
        "operationId": "onboardingUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/aggregation/{taxCode}": {
      "post": {
        "tags": [],
        "summary": "onboardingAggregateImport",
        "description": "The service allows the onboarding of an institution through import with aggregates",
        "operationId": "onboardingAggregateImport",
        "parameters": [
          {
            "name": "taxCode",
            "in": "path",
            "description": "taxCode",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingAggregatorImportDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/import": {
      "post": {
        "tags": [],
        "summary": "onboardingImport",
        "description": "The service allows the onboarding of an institution through import",
        "operationId": "onboardingImportUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingImportProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/users": {
      "post": {
        "tags": [
          "Onboarding"
        ],
        "summary": "The service adds users to the registry if they are not present and associates them with the institution and product contained in the body",
        "description": "The service adds users to the registry if they are not present and associates them with the institution and product contained in the body",
        "operationId": "onboardingInstitutionUsersUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingInstitutionUsersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationshipResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "getUserInfo",
        "description": "Service to retrieve user info including institutions and products linked to him, this service retrives 100 institutions at most",
        "operationId": "V2getUserInfoUsingGET",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/documents": {
      "get": {
        "tags": [],
        "summary": "Retrieves the list of files on the azure storage on the given path",
        "description": "Fetches a list of files associated with the specified path on the storage.",
        "operationId": "getFiles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/documents/{path}": {
      "get": {
        "tags": [],
        "summary": "Retrieves the list of files on the azure storage on the given path",
        "description": "Fetches a list of files associated with the specified path on the storage.",
        "operationId": "getFilesFromPath",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/completion": {
      "post": {
        "tags": [
          "Onboarding Controller"
        ],
        "summary": "Complete onboarding request and set status to COMPLETED.",
        "description": "Perform onboarding as /onboarding but completing the onboarding request to COMPLETED phase.",
        "operationId": "onboardingCompletion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingDefaultRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingResponse1"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/institutionOnboardings": {
      "get": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Get onboardings by institution taxCode, subunitCode, origin, or originId.",
        "description": "Returns onboardings record by institution taxCode/subunitCode/origin/originId",
        "operationId": "onboardingInstitutionUsingGET",
        "parameters": [
          {
            "name": "origin",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OnboardingStatus"
            }
          },
          {
            "name": "subunitCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taxCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OnboardingResponse1"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ],
        "x-legacy-api": "true"
      }
    },
    "/onboarding/pa/completion": {
      "post": {
        "tags": [
          "Onboarding Controller"
        ],
        "summary": "Complete PA onboarding request and set status to COMPLETED.",
        "description": "Perform onboarding as /onboarding/pa but completing the onboarding request to COMPLETED phase.",
        "operationId": "onboardingPaCompletion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingPaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingResponse1"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/pa/import": {
      "post": {
        "tags": [
          "Onboarding Controller"
        ],
        "summary": "Import PA onboarding with token creation and complete to COMPLETED.",
        "description": "Perform onboarding as /onboarding/pa but create token and completing the onboarding request to COMPLETED phase.",
        "operationId": "onboardingPaImport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingImportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingResponse1"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/psp/completion": {
      "post": {
        "tags": [
          "Onboarding Controller"
        ],
        "summary": "Complete PSP onboarding request and set status to COMPLETED.",
        "description": "Perform onboarding as /onboarding/psp but completing the onboarding request to COMPLETED phase.",
        "operationId": "onboardingPspCompletion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingPspRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingResponse1"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/{onboardingId}": {
      "delete": {
        "tags": [],
        "summary": "Perform delete operation of an onboarding request",
        "description": "Perform delete operation of an onboarding request receiving onboarding id, then invokes async process to set DELETED as status for institution and user onboardings.",
        "operationId": "deleteOnboarding",
        "parameters": [
          {
            "name": "onboardingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/{onboardingId}/complete": {
      "put": {
        "tags": [],
        "summary": "Complete onboarding by verifying and uploading contract, then trigger async activities.",
        "description": "Perform complete operation of an onboarding request receiving onboarding id and contract signed by the institution.It checks the contract's signature and upload the contract on an azure storageAt the end, function triggers async activities related to complete onboarding that consist of create the institution, activate the onboarding and sending data to notification queue.",
        "operationId": "completeOnboardingUsingPUT",
        "parameters": [
          {
            "name": "onboardingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "contract"
                ],
                "type": "object",
                "properties": {
                  "contract": {
                    "format": "binary",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/onboarding/{onboardingId}/consume": {
      "put": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Complete onboarding without verifying contract signature.",
        "description": "Perform complete operation of an onboarding request as /complete but without signature verification of the contract",
        "operationId": "completeOnboardingTokenConsume",
        "parameters": [
          {
            "name": "onboardingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "contract"
                ],
                "type": "object",
                "properties": {
                  "contract": {
                    "format": "binary",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/tokens/contract-report": {
      "get": {
        "tags": [],
        "summary": "Check if contract signed is a CADES file",
        "description": "Check if contract signed is a CADES file even if is not .p7m",
        "operationId": "reportContractSigned",
        "parameters": [
          {
            "name": "onboardingId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSignedReport"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    },
    "/tokens/contract-signed": {
      "put": {
        "tags": [],
        "summary": "Find an attachment for a given onboarding id and update the contract signed path",
        "description": "Find  an attachment for a given onboarding id and update the contract signed path",
        "operationId": "updateContractSigned",
        "parameters": [
          {
            "name": "contractSigned",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onboardingId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "format": "int64",
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "apiKeyHeader": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "DelegationResponse": {
        "title": "DelegationResponse",
        "type": "object",
        "properties": {
          "brokerId": {
            "type": "string"
          },
          "brokerName": {
            "type": "string"
          },
          "brokerTaxCode": {
            "type": "string"
          },
          "brokerType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "institutionId": {
            "type": "string"
          },
          "institutionName": {
            "type": "string"
          },
          "institutionRootName": {
            "type": "string"
          },
          "institutionType": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED"
            ]
          },
          "taxCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "AOO",
              "EA",
              "PT"
            ]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Human-readable description of this specific problem."
          },
          "instance": {
            "type": "string",
            "description": "A URI that describes where the problem occurred."
          },
          "invalidParams": {
            "type": "array",
            "description": "A list of invalid parameters details.",
            "items": {
              "$ref": "#/components/schemas/InvalidParam"
            }
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code.",
            "format": "int32",
            "example": 500
          },
          "title": {
            "type": "string",
            "description": "Short human-readable summary of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URL to a page with more details regarding the problem."
          }
        },
        "description": "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      },
      "InvalidParam": {
        "title": "InvalidParam",
        "required": [
          "name",
          "reason"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Invalid parameter name."
          },
          "reason": {
            "type": "string",
            "description": "Invalid parameter reason."
          }
        }
      },
      "DelegationRequestFromTaxcode": {
        "title": "DelegationRequestFromTaxcode",
        "type": "object",
        "properties": {
          "fromSubunitCode": {
            "type": "string"
          },
          "fromTaxCode": {
            "type": "string"
          },
          "institutionFromName": {
            "type": "string"
          },
          "institutionToName": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "toSubunitCode": {
            "type": "string"
          },
          "toTaxCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "AOO",
              "EA",
              "PT"
            ]
          }
        }
      },
      "InstitutionResponse": {
        "title": "InstitutionResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "aooParentCode": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributesResponse"
            }
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DataProtectionOfficerResponse"
          },
          "delegation": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoTaxonomies"
            }
          },
          "id": {
            "type": "string"
          },
          "imported": {
            "type": "boolean"
          },
          "institutionType": {
            "type": "string"
          },
          "isTest": {
            "type": "boolean"
          },
          "istatCode": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "onboarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardedProductResponse"
            }
          },
          "origin": {
            "type": "string"
          },
          "originId": {
            "type": "string"
          },
          "paymentServiceProvider": {
            "$ref": "#/components/schemas/PaymentServiceProviderResponse"
          },
          "rea": {
            "type": "string"
          },
          "rootParent": {
            "$ref": "#/components/schemas/RootParentResponse"
          },
          "shareCapital": {
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "AttributesResponse": {
        "title": "AttributesResponse",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          }
        }
      },
      "DataProtectionOfficerResponse": {
        "title": "DataProtectionOfficerResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "pec": {
            "type": "string"
          }
        }
      },
      "GeoTaxonomies": {
        "title": "GeoTaxonomies",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          }
        }
      },
      "OnboardedProductResponse": {
        "title": "OnboardedProductResponse",
        "type": "object",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/BillingResponse1"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "institutionType": {
            "type": "string",
            "enum": [
              "AS",
              "CON",
              "GPU",
              "GSP",
              "PA",
              "PG",
              "PRV",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "isAggregator": {
            "type": "boolean"
          },
          "origin": {
            "type": "string"
          },
          "originId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED",
              "PENDING",
              "REJECTED",
              "SUSPENDED",
              "TOBEVALIDATED"
            ]
          },
          "tokenId": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BillingResponse1": {
        "title": "BillingResponse",
        "type": "object",
        "properties": {
          "publicServices": {
            "type": "boolean"
          },
          "recipientCode": {
            "type": "string"
          },
          "taxCodeInvoicing": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProviderResponse": {
        "title": "PaymentServiceProviderResponse",
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string"
          },
          "businessRegisterNumber": {
            "type": "string"
          },
          "legalRegisterName": {
            "type": "string"
          },
          "legalRegisterNumber": {
            "type": "string"
          },
          "vatNumberGroup": {
            "type": "boolean"
          }
        }
      },
      "RootParentResponse": {
        "title": "RootParentResponse",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "CreatedAtRequest": {
        "title": "CreatedAtRequest",
        "type": "object",
        "properties": {
          "activatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "string"
          }
        }
      },
      "Problem1": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "invalidParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvalidParam1"
            }
          },
          "status": {
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "InvalidParam1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "OnboardedProductState": {
        "enum": [
          "ACTIVE",
          "PENDING",
          "TOBEVALIDATED",
          "SUSPENDED",
          "DELETED",
          "REJECTED"
        ],
        "type": "string"
      },
      "UOResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "codiceIpa": {
            "type": "string"
          },
          "denominazioneEnte": {
            "type": "string"
          },
          "codiceFiscaleEnte": {
            "type": "string"
          },
          "codiceFiscaleSfe": {
            "type": "string"
          },
          "codiceUniUo": {
            "type": "string"
          },
          "codiceUniUoPadre": {
            "type": "string"
          },
          "codiceUniAoo": {
            "type": "string"
          },
          "descrizioneUo": {
            "type": "string"
          },
          "mail1": {
            "type": "string"
          },
          "mail2": {
            "type": "string"
          },
          "mail3": {
            "type": "string"
          },
          "origin": {
            "type": "string",
            "enum": [
              "static",
              "IPA",
              "ANAC",
              "IVASS",
              "INFOCAMERE"
            ]
          },
          "dataIstituzione": {
            "type": "string"
          },
          "nomeResponsabile": {
            "type": "string"
          },
          "cognomeResponsabile": {
            "type": "string"
          },
          "mailResponsabile": {
            "type": "string"
          },
          "telefonoResponsabile": {
            "type": "string"
          },
          "codiceComuneISTAT": {
            "type": "string"
          },
          "codiceCatastaleComune": {
            "type": "string"
          },
          "indirizzo": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "tipoMail1": {
            "type": "string"
          },
          "tipoMail2": {
            "type": "string"
          },
          "tipoMail3": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "dataAggiornamento": {
            "type": "string"
          },
          "cap": {
            "type": "string"
          }
        }
      },
      "PDNDBusinessResource": {
        "type": "object",
        "properties": {
          "businessTaxId": {
            "type": "string"
          },
          "businessName": {
            "type": "string"
          },
          "legalNature": {
            "type": "string"
          },
          "legalNatureDescription": {
            "type": "string"
          },
          "cciaa": {
            "type": "string"
          },
          "businessStatus": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "nrea": {
            "type": "string"
          }
        }
      },
      "AOOResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "codiceIpa": {
            "type": "string"
          },
          "denominazioneEnte": {
            "type": "string"
          },
          "codiceFiscaleEnte": {
            "type": "string"
          },
          "codiceUniAoo": {
            "type": "string"
          },
          "denominazioneAoo": {
            "type": "string"
          },
          "dataIstituzione": {
            "type": "string"
          },
          "nomeResponsabile": {
            "type": "string"
          },
          "cognomeResponsabile": {
            "type": "string"
          },
          "mailResponsabile": {
            "type": "string"
          },
          "telefonoResponsabile": {
            "type": "string"
          },
          "codiceComuneISTAT": {
            "type": "string"
          },
          "codiceCatastaleComune": {
            "type": "string"
          },
          "indirizzo": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "protocolloInformatico": {
            "type": "string"
          },
          "dataAggiornamento": {
            "type": "string"
          },
          "codAoo": {
            "type": "string"
          },
          "origin": {
            "type": "string",
            "enum": [
              "static",
              "IPA",
              "ANAC",
              "IVASS",
              "INFOCAMERE"
            ]
          },
          "tipoMail1": {
            "type": "string"
          },
          "mail1": {
            "type": "string"
          },
          "tipoMail2": {
            "type": "string"
          },
          "mail2": {
            "type": "string"
          },
          "tipoMail3": {
            "type": "string"
          },
          "mail3": {
            "type": "string"
          },
          "cap": {
            "type": "string"
          },
          "uriprotocolloInformatico": {
            "type": "string"
          }
        }
      },
      "UserResource": {
        "title": "UserResource",
        "required": [
          "id",
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's institutional email"
          },
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "id": {
            "type": "string",
            "description": "User's unique identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "ADMIN_EA",
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "roles": {
            "type": "array",
            "description": "User's roles in product",
            "items": {
              "type": "string"
            }
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          }
        }
      },
      "OnboardingProductDto": {
        "title": "OnboardingProductDto",
        "required": [
          "geographicTaxonomies",
          "institutionType",
          "productId",
          "users"
        ],
        "type": "object",
        "properties": {
          "additionalInformations": {
            "description": "GSP institution's additional information",
            "$ref": "#/components/schemas/AdditionalInformationsDto"
          },
          "aggregates": {
            "type": "array",
            "description": "List of aggregates users",
            "items": {
              "$ref": "#/components/schemas/AggregateInstitutionDto"
            }
          },
          "assistanceContacts": {
            "description": "Institution's assistance contacts",
            "$ref": "#/components/schemas/AssistanceContactsDto"
          },
          "billingData": {
            "description": "Institution's billing information",
            "$ref": "#/components/schemas/BillingDataDto"
          },
          "companyInformations": {
            "description": "GPS, SCP, PT optional data",
            "$ref": "#/components/schemas/CompanyInformationsDto"
          },
          "geographicTaxonomies": {
            "type": "array",
            "description": "List of geographic Taxonomies",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomyDto"
            }
          },
          "gpuData": {
            "description": "GPU specific data",
            "$ref": "#/components/schemas/GPUData"
          },
          "institutionLocationData": {
            "description": "Institution's location Data",
            "$ref": "#/components/schemas/InstitutionLocationDataDto"
          },
          "institutionType": {
            "type": "string",
            "description": "Institution's type",
            "enum": [
              "AS",
              "CON",
              "GPU",
              "GSP",
              "PA",
              "PG",
              "PRV",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "isAggregator": {
            "type": "boolean",
            "description": "True if institution is an aggregator",
            "example": false
          },
          "origin": {
            "type": "string",
            "description": "Institution data origin"
          },
          "originId": {
            "type": "string",
            "description": "Institution's details origin Id"
          },
          "pricingPlan": {
            "type": "string",
            "description": "Product's pricing plan"
          },
          "productId": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "pspData": {
            "description": "Payment Service Provider (PSP) specific data",
            "$ref": "#/components/schemas/PspDataDto"
          },
          "subunitCode": {
            "type": "string",
            "description": "Institutions AOO/UO unit Code"
          },
          "subunitType": {
            "type": "string",
            "description": "Institutions AOO/UO unit type"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's taxCode"
          },
          "users": {
            "type": "array",
            "description": "List of onboarding users",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        }
      },
      "AdditionalInformationsDto": {
        "title": "AdditionalInformationsDto",
        "type": "object",
        "properties": {
          "agentOfPublicService": {
            "type": "boolean"
          },
          "agentOfPublicServiceNote": {
            "type": "string"
          },
          "belongRegulatedMarket": {
            "type": "boolean"
          },
          "establishedByRegulatoryProvision": {
            "type": "boolean"
          },
          "establishedByRegulatoryProvisionNote": {
            "type": "string"
          },
          "ipa": {
            "type": "boolean"
          },
          "ipaCode": {
            "type": "string"
          },
          "otherNote": {
            "type": "string"
          },
          "regulatedMarketNote": {
            "type": "string"
          }
        }
      },
      "AggregateInstitutionDto": {
        "title": "AggregateInstitutionDto",
        "required": [
          "description",
          "taxCode"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomyDto"
            }
          },
          "iban": {
            "type": "string"
          },
          "origin": {
            "type": "string",
            "enum": [
              "ADE",
              "ANAC",
              "INFOCAMERE",
              "IPA",
              "IVASS",
              "MOCK",
              "PDND_INFOCAMERE",
              "SELC",
              "UNKNOWN"
            ]
          },
          "originId": {
            "type": "string"
          },
          "parentDescription": {
            "type": "string"
          },
          "recipientCode": {
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "vatNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "GeographicTaxonomyDto": {
        "title": "GeographicTaxonomyDto",
        "required": [
          "code",
          "desc"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Institution's geographic taxonomy ISTAT code"
          },
          "desc": {
            "type": "string",
            "description": "Institution's geographic taxonomy extended name"
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productRole": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN_EA",
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "surname": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          }
        }
      },
      "AssistanceContactsDto": {
        "title": "AssistanceContactsDto",
        "type": "object",
        "properties": {
          "supportEmail": {
            "type": "string",
            "description": "Institution's support email contact",
            "format": "email",
            "example": "email@example.com"
          },
          "supportPhone": {
            "type": "string",
            "description": "Institution's support phone contact"
          }
        }
      },
      "BillingDataDto": {
        "title": "BillingDataDto",
        "required": [
          "businessName",
          "digitalAddress",
          "registeredOffice"
        ],
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "description": "Institution's legal name"
          },
          "digitalAddress": {
            "type": "string",
            "description": "Institution's digitalAddress"
          },
          "publicServices": {
            "type": "boolean",
            "description": "Institution's service type",
            "example": false
          },
          "recipientCode": {
            "type": "string",
            "description": "Billing recipient code, not required only for institutionType SA"
          },
          "registeredOffice": {
            "type": "string",
            "description": "Institution's physical address"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's taxCode"
          },
          "taxCodeInvoicing": {
            "type": "string",
            "description": "Institution's taxCodeInvoicing"
          },
          "vatNumber": {
            "type": "string",
            "description": "Institution's VAT number"
          },
          "zipCode": {
            "type": "string",
            "description": "Institution's zipCode"
          }
        }
      },
      "CompanyInformationsDto": {
        "title": "CompanyInformationsDto",
        "type": "object",
        "properties": {
          "businessRegisterPlace": {
            "type": "string",
            "description": "Institution's business register place"
          },
          "rea": {
            "type": "string",
            "description": "Institution's REA"
          },
          "shareCapital": {
            "type": "string",
            "description": "Institution's share capital value"
          }
        }
      },
      "GPUData": {
        "title": "GPUData",
        "type": "object",
        "properties": {
          "businessRegisterNumber": {
            "type": "string"
          },
          "institutionCourtMeasures": {
            "type": "boolean"
          },
          "legalRegisterName": {
            "type": "string"
          },
          "legalRegisterNumber": {
            "type": "string"
          },
          "manager": {
            "type": "boolean"
          },
          "managerAuthorized": {
            "type": "boolean"
          },
          "managerEligible": {
            "type": "boolean"
          },
          "managerProsecution": {
            "type": "boolean"
          }
        }
      },
      "InstitutionLocationDataDto": {
        "title": "InstitutionLocationDataDto",
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "Institution's physical address city"
          },
          "country": {
            "type": "string",
            "description": "Institution's physical address country"
          },
          "county": {
            "type": "string",
            "description": "Institution's physical address county"
          }
        }
      },
      "PspDataDto": {
        "title": "PspDataDto",
        "required": [
          "abiCode",
          "businessRegisterNumber",
          "dpoData",
          "legalRegisterName",
          "legalRegisterNumber",
          "vatNumberGroup"
        ],
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string",
            "description": "PSP's ABI code"
          },
          "businessRegisterNumber": {
            "type": "string",
            "description": "PSP's Business Register number"
          },
          "contractId": {
            "type": "string",
            "description": "PSP Contract unique identifier"
          },
          "contractType": {
            "type": "string",
            "description": "PSP Contract type A or B"
          },
          "dpoData": {
            "description": "Data Protection Officer (DPO) specific data",
            "$ref": "#/components/schemas/DpoDataDto"
          },
          "legalRegisterName": {
            "type": "string",
            "description": "PSP's legal register name"
          },
          "legalRegisterNumber": {
            "type": "string",
            "description": "PSP's legal register number"
          },
          "providerNames": {
            "type": "array",
            "description": "PSP provider names",
            "items": {
              "type": "string"
            }
          },
          "vatNumberGroup": {
            "type": "boolean",
            "description": "PSP's Vat Number group",
            "example": false
          }
        }
      },
      "DpoDataDto": {
        "title": "DpoDataDto",
        "required": [
          "address",
          "email",
          "pec"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "DPO's address"
          },
          "email": {
            "type": "string",
            "description": "DPO's email",
            "format": "email",
            "example": "email@example.com"
          },
          "pec": {
            "type": "string",
            "description": "DPO's PEC",
            "format": "email",
            "example": "email@example.com"
          }
        }
      },
      "UserDto": {
        "title": "UserDto",
        "required": [
          "email",
          "name",
          "role",
          "surname",
          "taxCode"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "email@example.com"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "ADMIN_EA",
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          },
          "taxCode": {
            "type": "string",
            "description": "User's fiscal code"
          }
        }
      },
      "OnboardingAggregatorImportDto": {
        "title": "OnboardingAggregatorImportDto",
        "required": [
          "aggregates",
          "importContract"
        ],
        "type": "object",
        "properties": {
          "aggregates": {
            "type": "array",
            "description": "List of aggregates users",
            "items": {
              "$ref": "#/components/schemas/TaxCodeDto"
            }
          },
          "importContract": {
            "description": "Institution's old contract information",
            "$ref": "#/components/schemas/ImportContractDto"
          },
          "users": {
            "type": "array",
            "description": "List of onboarding users",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        }
      },
      "TaxCodeDto": {
        "title": "TaxCodeDto",
        "required": [
          "taxCode"
        ],
        "type": "object",
        "properties": {
          "taxCode": {
            "type": "string",
            "description": "Taxcode of user"
          }
        }
      },
      "ImportContractDto": {
        "title": "ImportContractDto",
        "required": [
          "contractType",
          "fileName",
          "filePath",
          "onboardingDate"
        ],
        "type": "object",
        "properties": {
          "contractType": {
            "type": "string",
            "description": "Institution's old contract version"
          },
          "fileName": {
            "type": "string",
            "description": "Institution's old contract file name"
          },
          "filePath": {
            "type": "string",
            "description": "Institution's old contract file path"
          },
          "onboardingDate": {
            "type": "string",
            "description": "Institution's old onboarding date in the format 2007-12-03T10:15:30+01:00 (YYYY-MM-DD-T-HH:mm:ss+UTC)",
            "format": "date-time"
          }
        }
      },
      "OnboardingImportProductDto": {
        "title": "OnboardingImportProductDto",
        "required": [
          "geographicTaxonomies",
          "institutionType",
          "productId"
        ],
        "type": "object",
        "properties": {
          "activatedAt": {
            "type": "string",
            "description": "Previous contract sign date for import",
            "format": "date-time"
          },
          "additionalInformations": {
            "description": "GSP institution's additional information",
            "$ref": "#/components/schemas/AdditionalInformationsDto"
          },
          "assistanceContacts": {
            "description": "Institution's assistance contacts",
            "$ref": "#/components/schemas/AssistanceContactsDto"
          },
          "billingData": {
            "description": "Institution's billing information",
            "$ref": "#/components/schemas/BillingDataDto"
          },
          "companyInformations": {
            "description": "GPS, SCP, PT optional data",
            "$ref": "#/components/schemas/CompanyInformationsDto"
          },
          "contractSigned": {
            "type": "string",
            "description": "Contract signed file path"
          },
          "geographicTaxonomies": {
            "type": "array",
            "description": "List of geographic Taxonomies",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomyDto"
            }
          },
          "institutionLocationData": {
            "description": "Institution's location Data",
            "$ref": "#/components/schemas/InstitutionLocationDataDto"
          },
          "institutionType": {
            "type": "string",
            "description": "Institution's type",
            "enum": [
              "AS",
              "CON",
              "GPU",
              "GSP",
              "PA",
              "PG",
              "PRV",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "origin": {
            "type": "string",
            "description": "Institution data origin"
          },
          "originId": {
            "type": "string",
            "description": "Institution's details origin Id"
          },
          "pricingPlan": {
            "type": "string",
            "description": "Product's pricing plan"
          },
          "productId": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "pspData": {
            "description": "Payment Service Provider (PSP) specific data",
            "$ref": "#/components/schemas/PspDataDto"
          },
          "subunitCode": {
            "type": "string",
            "description": "Institutions AOO/UO unit Code"
          },
          "subunitType": {
            "type": "string",
            "description": "Institutions AOO/UO unit type"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's taxCode"
          },
          "users": {
            "type": "array",
            "description": "List of onboarding users",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        }
      },
      "RelationshipResult": {
        "title": "RelationshipResult",
        "type": "object",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/BillingResponse"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "from": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "institutionUpdate": {
            "$ref": "#/components/schemas/InstitutionUpdateResponse"
          },
          "pricingPlan": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProductInfo"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN_EA",
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED",
              "PENDING",
              "REJECTED",
              "SUSPENDED",
              "TOBEVALIDATED"
            ]
          },
          "to": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BillingResponse": {
        "title": "BillingResponse",
        "type": "object",
        "properties": {
          "publicServices": {
            "type": "boolean"
          },
          "recipientCode": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          }
        }
      },
      "InstitutionUpdateResponse": {
        "title": "InstitutionUpdateResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DpoDataResource"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imported": {
            "type": "boolean"
          },
          "institutionType": {
            "type": "string",
            "enum": [
              "AS",
              "CON",
              "GPU",
              "GSP",
              "PA",
              "PG",
              "PRV",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "paymentServiceProvider": {
            "$ref": "#/components/schemas/PspDataResource"
          },
          "rea": {
            "type": "string"
          },
          "shareCapital": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "DpoDataResource": {
        "title": "DpoDataResource",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "DPO's address"
          },
          "email": {
            "type": "string",
            "description": "DPO's email"
          },
          "pec": {
            "type": "string",
            "description": "DPO's PEC"
          }
        }
      },
      "PspDataResource": {
        "title": "PspDataResource",
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string",
            "description": "PSP's ABI code"
          },
          "businessRegisterNumber": {
            "type": "string",
            "description": "PSP's Business Register number"
          },
          "legalRegisterName": {
            "type": "string",
            "description": "PSP's legal register name"
          },
          "legalRegisterNumber": {
            "type": "string",
            "description": "PSP's legal register number"
          },
          "vatNumberGroup": {
            "type": "boolean",
            "description": "PSP's Vat Number group",
            "example": false
          }
        }
      },
      "ProductInfo": {
        "title": "ProductInfo",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "productRole": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "OnboardingInstitutionUsersRequest": {
        "title": "OnboardingInstitutionUsersRequest",
        "type": "object",
        "properties": {
          "institutionSubunitCode": {
            "type": "string"
          },
          "institutionTaxCode": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "sendCreateUserNotificationEmail": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          }
        }
      },
      "Person": {
        "title": "Person",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "env": {
            "type": "string",
            "enum": [
              "COLL",
              "DEV",
              "PROD",
              "ROOT"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productRole": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN_EA",
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "roleLabel": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          }
        }
      },
      "UserInfoResource": {
        "title": "UserInfoResource",
        "type": "object",
        "properties": {
          "onboardedInstitutions": {
            "type": "array",
            "description": "Object that includes all info about onboarded institutions linked to a user",
            "items": {
              "$ref": "#/components/schemas/OnboardedInstitutionResource"
            }
          },
          "user": {
            "description": "Object that includes all info about a user",
            "$ref": "#/components/schemas/UserResource"
          }
        }
      },
      "OnboardedInstitutionResource": {
        "title": "OnboardedInstitutionResource",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Institution's address"
          },
          "description": {
            "type": "string",
            "description": "Institution's description"
          },
          "digitalAddress": {
            "type": "string",
            "description": "Institution's digital address"
          },
          "id": {
            "type": "string",
            "description": "Institution's Id"
          },
          "institutionType": {
            "type": "string",
            "description": "Institution's type",
            "enum": [
              "AS",
              "CON",
              "GPU",
              "GSP",
              "PA",
              "PG",
              "PRV",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "productInfo": {
            "description": "Products' info of onboardings",
            "$ref": "#/components/schemas/ProductInfo"
          },
          "state": {
            "type": "string",
            "description": "Onboarding's state"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's tax code"
          },
          "userEmail": {
            "type": "string",
            "description": "User's email linked to the institution"
          },
          "zipCode": {
            "type": "string",
            "description": "Institution's zip code"
          }
        }
      },
      "SearchUserDto": {
        "title": "SearchUserDto",
        "required": [
          "fiscalCode"
        ],
        "type": "object",
        "properties": {
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "statuses": {
            "type": "array",
            "description": "User's statuses",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "DELETED",
                "PENDING",
                "REJECTED",
                "SUSPENDED",
                "TOBEVALIDATED"
              ]
            }
          }
        }
      },
      "OnboardingResponse1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "workflowType": {
            "type": "string"
          },
          "institution": {
            "$ref": "#/components/schemas/InstitutionResponse1"
          },
          "pricingPlan": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserOnboardingResponse"
            }
          },
          "billing": {
            "$ref": "#/components/schemas/BillingResponse2"
          },
          "status": {
            "type": "string"
          },
          "additionalInformations": {
            "$ref": "#/components/schemas/AdditionalInformationsDto1"
          },
          "userRequestUid": {
            "type": "string"
          },
          "isAggregator": {
            "type": "boolean"
          },
          "createdAt": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        }
      },
      "InstitutionResponse1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "institutionType": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "taxCodeInvoicing": {
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "$ref": "#/components/schemas/InstitutionPaSubunitType"
          },
          "origin": {
            "$ref": "#/components/schemas/Origin"
          },
          "originId": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "parentDescription": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomyDto1"
            }
          },
          "rea": {
            "type": "string"
          },
          "shareCapital": {
            "type": "string"
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "paymentServiceProvider": {
            "$ref": "#/components/schemas/PaymentServiceProviderRequest1"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DataProtectionOfficerRequest1"
          }
        }
      },
      "InstitutionPaSubunitType": {
        "enum": [
          "AOO",
          "UO",
          "EC"
        ],
        "type": "string"
      },
      "Origin": {
        "enum": [
          "MOCK",
          "IPA",
          "SELC",
          "ANAC",
          "UNKNOWN",
          "ADE",
          "INFOCAMERE",
          "IVASS",
          "PDND_INFOCAMERE"
        ],
        "type": "string"
      },
      "GeographicTaxonomyDto1": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProviderRequest1": {
        "type": "object",
        "properties": {
          "businessRegisterNumber": {
            "type": "string"
          },
          "legalRegisterNumber": {
            "type": "string"
          },
          "legalRegisterName": {
            "type": "string"
          },
          "longTermPayments": {
            "type": "boolean"
          },
          "abiCode": {
            "type": "string"
          },
          "vatNumberGroup": {
            "type": "boolean"
          },
          "providerNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contractType": {
            "type": "string"
          },
          "contractId": {
            "type": "string"
          }
        }
      },
      "DataProtectionOfficerRequest1": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "pec": {
            "type": "string"
          }
        }
      },
      "UserOnboardingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/PartyRole"
          },
          "productRole": {
            "type": "string"
          },
          "userMailUuid": {
            "type": "string"
          }
        }
      },
      "PartyRole": {
        "enum": [
          "MANAGER",
          "DELEGATE",
          "SUB_DELEGATE",
          "OPERATOR",
          "ADMIN_EA"
        ],
        "type": "string"
      },
      "BillingResponse2": {
        "type": "object",
        "properties": {
          "vatNumber": {
            "type": "string"
          },
          "recipientCode": {
            "type": "string"
          },
          "publicServices": {
            "type": "boolean"
          }
        }
      },
      "AdditionalInformationsDto1": {
        "type": "object",
        "properties": {
          "belongRegulatedMarket": {
            "type": "boolean"
          },
          "regulatedMarketNote": {
            "type": "string"
          },
          "ipa": {
            "type": "boolean"
          },
          "ipaCode": {
            "type": "string"
          },
          "establishedByRegulatoryProvision": {
            "type": "boolean"
          },
          "establishedByRegulatoryProvisionNote": {
            "type": "string"
          },
          "agentOfPublicService": {
            "type": "boolean"
          },
          "agentOfPublicServiceNote": {
            "type": "string"
          },
          "otherNote": {
            "type": "string"
          }
        }
      },
      "LocalDateTime": {
        "format": "date-time",
        "type": "string",
        "example": "2022-03-10T12:15:50"
      },
      "OnboardingDefaultRequest": {
        "required": [
          "productId",
          "institution"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "minLength": 1,
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRequest"
            }
          },
          "aggregates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregateInstitutionRequest"
            }
          },
          "isAggregator": {
            "type": "boolean"
          },
          "pricingPlan": {
            "type": "string"
          },
          "signContract": {
            "type": "boolean"
          },
          "institution": {
            "$ref": "#/components/schemas/InstitutionBaseRequest"
          },
          "billing": {
            "$ref": "#/components/schemas/BillingRequest1"
          },
          "additionalInformations": {
            "$ref": "#/components/schemas/AdditionalInformationsDto1"
          },
          "gpuData": {
            "$ref": "#/components/schemas/GPUData1"
          }
        }
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "taxCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/PartyRole"
          }
        }
      },
      "AggregateInstitutionRequest": {
        "required": [
          "taxCode",
          "description"
        ],
        "type": "object",
        "properties": {
          "taxCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          },
          "parentDescription": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomy1"
            }
          },
          "address": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "originId": {
            "type": "string"
          },
          "origin": {
            "$ref": "#/components/schemas/Origin"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRequest"
            }
          },
          "recipientCode": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          }
        }
      },
      "GeographicTaxonomy1": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          }
        }
      },
      "InstitutionBaseRequest": {
        "required": [
          "institutionType",
          "origin",
          "originId",
          "digitalAddress"
        ],
        "type": "object",
        "properties": {
          "institutionType": {
            "$ref": "#/components/schemas/InstitutionType"
          },
          "taxCode": {
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "$ref": "#/components/schemas/InstitutionPaSubunitType"
          },
          "origin": {
            "$ref": "#/components/schemas/Origin"
          },
          "originId": {
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "istatCode": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomyDto1"
            }
          },
          "rea": {
            "type": "string"
          },
          "shareCapital": {
            "type": "string"
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "imported": {
            "type": "boolean"
          }
        }
      },
      "InstitutionType": {
        "enum": [
          "PA",
          "PG",
          "GSP",
          "SA",
          "PT",
          "SCP",
          "PSP",
          "AS",
          "REC",
          "CON",
          "PRV",
          "GPU"
        ],
        "type": "string"
      },
      "BillingRequest1": {
        "type": "object",
        "properties": {
          "vatNumber": {
            "type": "string"
          },
          "recipientCode": {
            "type": "string"
          },
          "publicServices": {
            "type": "boolean"
          }
        }
      },
      "GPUData1": {
        "type": "object",
        "properties": {
          "businessRegisterNumber": {
            "type": "string"
          },
          "legalRegisterNumber": {
            "type": "string"
          },
          "legalRegisterName": {
            "type": "string"
          },
          "longTermPayments": {
            "type": "boolean"
          },
          "manager": {
            "type": "boolean"
          },
          "managerAuthorized": {
            "type": "boolean"
          },
          "managerEligible": {
            "type": "boolean"
          },
          "managerProsecution": {
            "type": "boolean"
          },
          "institutionCourtMeasures": {
            "type": "boolean"
          }
        }
      },
      "OnboardingStatus": {
        "enum": [
          "REQUEST",
          "TOBEVALIDATED",
          "PENDING",
          "COMPLETED",
          "FAILED",
          "REJECTED",
          "DELETED"
        ],
        "type": "string"
      },
      "OnboardingPaRequest": {
        "required": [
          "productId",
          "institution"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "minLength": 1,
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRequest"
            }
          },
          "aggregates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregateInstitutionRequest"
            }
          },
          "isAggregator": {
            "type": "boolean"
          },
          "pricingPlan": {
            "type": "string"
          },
          "signContract": {
            "type": "boolean"
          },
          "institution": {
            "$ref": "#/components/schemas/InstitutionBaseRequest"
          },
          "billing": {
            "$ref": "#/components/schemas/BillingPaRequest"
          },
          "additionalInformations": {
            "$ref": "#/components/schemas/AdditionalInformationsDto1"
          }
        }
      },
      "BillingPaRequest": {
        "type": "object",
        "properties": {
          "vatNumber": {
            "type": "string"
          },
          "recipientCode": {
            "type": "string"
          },
          "publicServices": {
            "type": "boolean"
          },
          "taxCodeInvoicing": {
            "type": "string"
          }
        }
      },
      "OnboardingImportRequest": {
        "required": [
          "institution",
          "productId",
          "contractImported"
        ],
        "type": "object",
        "properties": {
          "institution": {
            "$ref": "#/components/schemas/InstitutionImportRequest"
          },
          "productId": {
            "minLength": 1,
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRequest"
            }
          },
          "contractImported": {
            "$ref": "#/components/schemas/OnboardingImportContract"
          },
          "billing": {
            "$ref": "#/components/schemas/BillingPaRequest"
          },
          "forceImport": {
            "type": "boolean"
          },
          "sendMailForImport": {
            "type": "boolean"
          }
        }
      },
      "InstitutionImportRequest": {
        "required": [
          "taxCode"
        ],
        "type": "object",
        "properties": {
          "institutionType": {
            "$ref": "#/components/schemas/InstitutionType"
          },
          "taxCode": {
            "minLength": 1,
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "$ref": "#/components/schemas/InstitutionPaSubunitType"
          },
          "origin": {
            "$ref": "#/components/schemas/Origin"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomyDto1"
            }
          },
          "rea": {
            "type": "string"
          },
          "shareCapital": {
            "type": "string"
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "imported": {
            "type": "boolean"
          }
        }
      },
      "OnboardingImportContract": {
        "required": [
          "filePath",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "filePath": {
            "minLength": 1,
            "type": "string"
          },
          "contractType": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "activatedAt": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        }
      },
      "OnboardingPspRequest": {
        "required": [
          "productId",
          "institution"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "minLength": 1,
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRequest"
            }
          },
          "aggregates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregateInstitutionRequest"
            }
          },
          "isAggregator": {
            "type": "boolean"
          },
          "pricingPlan": {
            "type": "string"
          },
          "signContract": {
            "type": "boolean"
          },
          "institution": {
            "$ref": "#/components/schemas/InstitutionPspRequest"
          },
          "billing": {
            "$ref": "#/components/schemas/BillingRequest1"
          }
        }
      },
      "InstitutionPspRequest": {
        "required": [
          "institutionType",
          "origin",
          "originId",
          "digitalAddress",
          "paymentServiceProvider"
        ],
        "type": "object",
        "properties": {
          "institutionType": {
            "$ref": "#/components/schemas/InstitutionType"
          },
          "taxCode": {
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "$ref": "#/components/schemas/InstitutionPaSubunitType"
          },
          "origin": {
            "$ref": "#/components/schemas/Origin"
          },
          "originId": {
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "istatCode": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomyDto1"
            }
          },
          "rea": {
            "type": "string"
          },
          "shareCapital": {
            "type": "string"
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "imported": {
            "type": "boolean"
          },
          "paymentServiceProvider": {
            "$ref": "#/components/schemas/PaymentServiceProviderRequest1"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DataProtectionOfficerRequest1"
          }
        }
      },
      "ContractSignedReport": {
        "type": "object",
        "properties": {
          "cades": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      }
    }
  }
}