{
  "openapi": "3.0.3",
  "info": {
    "title": "External API service",
    "description": "This service is the proxy for external services",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://${host}/${basePath}"
    }
  ],
  "tags": [
    {
      "name": "Institution",
      "description": "Institution V 2 Controller"
    },
    {
      "name": "Token",
      "description": "Token Controller"
    },
    {
      "name": "User",
      "description": "User V 2 Controller"
    },
    {
      "name": "Delegation",
      "description": "Delegation Controller"
    },
    {
      "name": "UserGroup",
      "description": "User group endpoint CRUD operations"
    }
  ],
  "paths": {
    "/delegations": {
      "get": {
        "tags": [
          "Delegation"
        ],
        "summary": "Retrieve institution's delegations",
        "description": "Retrieve institution's delegations",
        "operationId": "getDelegationsUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "query",
            "description": "The internal identifier of the institution",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brokerId",
            "in": "query",
            "description": "The internal identifier of the institution",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Product's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Description ente",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taxCode",
            "in": "query",
            "description": "Institution's tax code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order to show response NONE, ASC, DESC",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC",
                "NONE"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DelegationResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "Gets institutions filtering by taxCode and/or subunitCode",
        "description": "Gets institutions filtering by taxCode and/or subunitCode",
        "operationId": "getInstitutionsUsingGET",
        "parameters": [
          {
            "name": "taxCode",
            "in": "query",
            "description": "Institution's tax code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subunitCode",
            "in": "query",
            "description": "Institution's subunit code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "origin",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "originId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions": {
      "get": {
        "tags": [
          "institutions"
        ],
        "summary": "getInstitutions",
        "deprecated": true,
        "description": "The service retrieves all the onboarded institutions related to the provided user and the product retrieved from Subscription Key. It is deprecated in favor of endpoint /users?institutionId={institutionId}",
        "operationId": "getInstitutionsUsingGETDeprecated",
        "parameters": [
          {
            "name": "userIdForAuth",
            "in": "query",
            "description": "User's unique identifier",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstitutionResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{id}": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "Gets the corresponding institution using internal institution id",
        "description": "Gets the corresponding institution using internal institution id",
        "operationId": "retrieveInstitutionByIdUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal identifier of the institution",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/onboardings": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "Retrieve institution information",
        "description": "Retrieve institution information",
        "operationId": "getOnboardingsInstitutionUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "The internal identifier of the institution",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve user information by userId and optional ProductId",
        "description": "Retrieves user given userId and optional ProductId",
        "operationId": "getUserInfoUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "institutionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem1"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/contract": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "getContract",
        "description": "Service to retrieve a contract given institutionId and productId",
        "operationId": "getContractUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique internal Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Product's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/products": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "getInstitutionProducts",
        "description": "Service to retrieve all active products for given institution and logged user",
        "operationId": "getInstitutionProductsUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique internal Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User's unique identifier",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/users": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "getInstitutionUsersByProduct",
        "description": "Service to get all the active users related to a specific pair of institution-product",
        "operationId": "getInstitutionUsersByProductUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique internal Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Product's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productRoles",
            "in": "query",
            "description": "Specific role of the user related to the product.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-selfcare-uid",
            "in": "header",
            "description": "x-selfcare-uid",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/tokens/products/{productId}": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Service to retrieve tokens from product's identifier",
        "description": "Service to retrieve tokens from product's identifier",
        "operationId": "getTokensFromProductUsingGET",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product's identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of elements per page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Token's status. Available values: REQUEST, TOBEVALIDATED, PENDING, COMPLETED, FAILED, REJECTED, DELETED",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "getUserInstitution",
        "description": "This endpoint retrieves detailed information about a user's association with various products within an institution. The response provides a comprehensive view of the user's roles, product statuses and the relevant timestamps.",
        "operationId": "v2getUserInstitution",
        "parameters": [
          {
            "name": "institutionId",
            "in": "query",
            "description": "Institution's unique internal Id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roles",
            "in": "query",
            "description": "General role of the user related to the product.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADMIN_EA",
                "DELEGATE",
                "MANAGER",
                "OPERATOR",
                "SUB_DELEGATE"
              ]
            }
          },
          {
            "name": "states",
            "in": "query",
            "description": "The current status of the user on the product. <br>Available values: ACTIVE, PENDING, TOBEVALIDATED, SUSPENDED, DELETED, REJECTED",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "products",
            "in": "query",
            "description": "products",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productRoles",
            "in": "query",
            "description": "The current status of the user on the product. <br>Available values: ACTIVE, PENDING, TOBEVALIDATED, SUSPENDED, DELETED, REJECTED",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInstitutionResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "getUserInfo",
        "description": "Service to retrieve user info including institutions and products linked to him, this service retrives 100 institutions at most",
        "operationId": "V2getUserInfoUsingGET",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/user-groups": {
      "get": {
        "tags": [
          "UserGroup"
        ],
        "summary": "getUserGroups",
        "description": "Service that allows to get a list of UserGroup entities",
        "operationId": "getUserGroupsUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "query",
            "description": "Users group's institutionId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to access (0 indexed, defaults to 0)",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page (defaults to 20, max 2000)",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Users group's productId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Member's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "If filter on status is present, it must be used with at least one of the other filters",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "DELETED",
                "SUSPENDED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOfUserGroupResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/message/{messageId}/status/{status}": {
      "post": {
        "tags": [],
        "summary": "messageAcknowledgment",
        "description": "Service to acknowledge message consumption by a consumer",
        "operationId": "messageAcknowledgmentUsingPOST",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "Kafka message unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Kafka message consumption acknowledgment status",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "enum": [
                "ACK",
                "NACK"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AckPayloadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AckPayloadRequest": {
        "title": "AckPayloadRequest",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Acknowledgment request payload message"
          }
        }
      },
      "DelegationResponse": {
        "title": "DelegationResponse",
        "type": "object",
        "properties": {
          "brokerId": {
            "type": "string"
          },
          "brokerName": {
            "type": "string"
          },
          "brokerTaxCode": {
            "type": "string"
          },
          "brokerType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "institutionId": {
            "type": "string"
          },
          "institutionName": {
            "type": "string"
          },
          "institutionRootName": {
            "type": "string"
          },
          "institutionType": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED"
            ]
          },
          "taxCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "AOO",
              "EA",
              "PT"
            ]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Human-readable description of this specific problem."
          },
          "instance": {
            "type": "string",
            "description": "A URI that describes where the problem occurred."
          },
          "invalidParams": {
            "type": "array",
            "description": "A list of invalid parameters details.",
            "items": {
              "$ref": "#/components/schemas/InvalidParam"
            }
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code.",
            "format": "int32",
            "example": 500
          },
          "title": {
            "type": "string",
            "description": "Short human-readable summary of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URL to a page with more details regarding the problem."
          }
        },
        "description": "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      },
      "InvalidParam": {
        "title": "InvalidParam",
        "required": [
          "name",
          "reason"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Invalid parameter name."
          },
          "reason": {
            "type": "string",
            "description": "Invalid parameter reason."
          }
        }
      },
      "InstitutionsResponse": {
        "title": "InstitutionsResponse",
        "type": "object",
        "properties": {
          "institutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstitutionResponse"
            }
          }
        }
      },
      "InstitutionResponse": {
        "title": "InstitutionResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "aooParentCode": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributesResponse"
            }
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DataProtectionOfficerResponse"
          },
          "delegation": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoTaxonomies"
            }
          },
          "id": {
            "type": "string"
          },
          "imported": {
            "type": "boolean"
          },
          "institutionType": {
            "type": "string"
          },
          "istatCode": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "onboarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardedProductResponse"
            }
          },
          "origin": {
            "type": "string"
          },
          "originId": {
            "type": "string"
          },
          "paymentServiceProvider": {
            "$ref": "#/components/schemas/PaymentServiceProviderResponse"
          },
          "rea": {
            "type": "string"
          },
          "rootParent": {
            "$ref": "#/components/schemas/RootParentResponse"
          },
          "shareCapital": {
            "type": "string"
          },
          "subunitCode": {
            "type": "string"
          },
          "subunitType": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "AttributesResponse": {
        "title": "AttributesResponse",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          }
        }
      },
      "DataProtectionOfficerResponse": {
        "title": "DataProtectionOfficerResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "pec": {
            "type": "string"
          }
        }
      },
      "GeoTaxonomies": {
        "title": "GeoTaxonomies",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          }
        }
      },
      "OnboardedProductResponse": {
        "title": "OnboardedProductResponse",
        "type": "object",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/BillingResponse1"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isAggregator": {
            "type": "boolean"
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED",
              "PENDING",
              "REJECTED",
              "SUSPENDED",
              "TOBEVALIDATED"
            ]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BillingResponse1": {
        "title": "BillingResponse",
        "type": "object",
        "properties": {
          "publicServices": {
            "type": "boolean"
          },
          "recipientCode": {
            "type": "string"
          },
          "taxCodeInvoicing": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProviderResponse": {
        "title": "PaymentServiceProviderResponse",
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string"
          },
          "businessRegisterNumber": {
            "type": "string"
          },
          "legalRegisterName": {
            "type": "string"
          },
          "legalRegisterNumber": {
            "type": "string"
          },
          "vatNumberGroup": {
            "type": "boolean"
          }
        }
      },
      "RootParentResponse": {
        "title": "RootParentResponse",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "OnboardingsResponse": {
        "title": "OnboardingsResponse",
        "type": "object",
        "properties": {
          "onboardings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardingResponse"
            }
          }
        }
      },
      "OnboardingResponse": {
        "title": "OnboardingResponse",
        "type": "object",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/BillingResponse1"
          },
          "closedAt": {
            "type": "string",
            "format": "date-time"
          },
          "contract": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isAggregator": {
            "type": "boolean"
          },
          "pricingPlan": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DELETED",
              "PENDING",
              "REJECTED",
              "SUSPENDED",
              "TOBEVALIDATED"
            ]
          },
          "tokenId": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserResponse": {
        "required": [
          "id",
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "name": {
            "pattern": "\\S",
            "type": "string"
          },
          "surname": {
            "pattern": "\\S",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "workContacts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Problem1": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "invalidParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvalidParam1"
            }
          },
          "status": {
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "InvalidParam1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "ProductResource": {
        "title": "ProductResource",
        "required": [
          "contractTemplatePath",
          "contractTemplateVersion",
          "description",
          "id",
          "roleMappings",
          "title",
          "urlBO"
        ],
        "type": "object",
        "properties": {
          "contractTemplatePath": {
            "type": "string",
            "description": "The path of contract"
          },
          "contractTemplateUpdatedAt": {
            "type": "string",
            "description": "Date the contract was postponed",
            "format": "date-time"
          },
          "contractTemplateVersion": {
            "type": "string",
            "description": "Version of the contract"
          },
          "createdAt": {
            "type": "string",
            "description": "Date the products was activated/created",
            "format": "date-time"
          },
          "depictImageUrl": {
            "type": "string",
            "description": "Product's depiction image url"
          },
          "description": {
            "type": "string",
            "description": "Product's description"
          },
          "id": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "identityTokenAudience": {
            "type": "string",
            "description": "Product's identity token audience"
          },
          "logo": {
            "type": "string",
            "description": "Product's logo"
          },
          "logoBgColor": {
            "type": "string",
            "description": "Product logo's background color"
          },
          "parentId": {
            "type": "string",
            "description": "Root parent of the sub product"
          },
          "roleManagementURL": {
            "type": "string",
            "description": "Url of the utilities management"
          },
          "roleMappings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProductRoleInfo"
            },
            "description": "Mappings between Party's and Product's role"
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          },
          "urlBO": {
            "type": "string",
            "description": "URL that redirects to the back-office section, where is possible to manage the product"
          },
          "urlPublic": {
            "type": "string",
            "description": "URL that redirects to the public information webpage of the product"
          }
        }
      },
      "ProductRoleInfo": {
        "title": "ProductRoleInfo",
        "type": "object",
        "properties": {
          "multiroleAllowed": {
            "type": "boolean"
          },
          "phasesAdditionAllowed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRole"
            }
          }
        }
      },
      "ProductRole": {
        "title": "ProductRole",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "productLabel": {
            "type": "string"
          }
        }
      },
      "UserResource": {
        "title": "UserResource",
        "required": [
          "id",
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's institutional email"
          },
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "id": {
            "type": "string",
            "description": "User's unique identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "ADMIN_EA",
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "roles": {
            "type": "array",
            "description": "User's roles in product",
            "items": {
              "type": "string"
            }
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          }
        }
      },
      "TokensResource": {
        "title": "TokensResource",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenResource"
            }
          }
        }
      },
      "TokenResource": {
        "title": "TokenResource",
        "type": "object",
        "properties": {
          "checksum": {
            "type": "string"
          },
          "closedAt": {
            "type": "string",
            "format": "date-time"
          },
          "contentType": {
            "type": "string"
          },
          "contractSigned": {
            "type": "string"
          },
          "contractTemplate": {
            "type": "string"
          },
          "contractVersion": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiringDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "institutionId": {
            "type": "string"
          },
          "institutionUpdate": {
            "$ref": "#/components/schemas/InstitutionUpdate"
          },
          "legals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalsResource"
            }
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InstitutionUpdate": {
        "title": "InstitutionUpdate",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "businessRegisterPlace": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DataProtectionOfficer"
          },
          "description": {
            "type": "string"
          },
          "digitalAddress": {
            "type": "string"
          },
          "geographicTaxonomies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicTaxonomy"
            }
          },
          "imported": {
            "type": "boolean"
          },
          "institutionType": {
            "type": "string",
            "enum": [
              "AS",
              "CON",
              "GSP",
              "PA",
              "PG",
              "PRV",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "paymentServiceProvider": {
            "$ref": "#/components/schemas/PaymentServiceProvider"
          },
          "rea": {
            "type": "string"
          },
          "shareCapital": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportPhone": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "DataProtectionOfficer": {
        "title": "DataProtectionOfficer",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "pec": {
            "type": "string"
          }
        }
      },
      "GeographicTaxonomy": {
        "title": "GeographicTaxonomy",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProvider": {
        "title": "PaymentServiceProvider",
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string"
          },
          "businessRegisterNumber": {
            "type": "string"
          },
          "legalRegisterName": {
            "type": "string"
          },
          "legalRegisterNumber": {
            "type": "string"
          },
          "vatNumberGroup": {
            "type": "boolean"
          }
        }
      },
      "LegalsResource": {
        "title": "LegalsResource",
        "type": "object",
        "properties": {
          "env": {
            "type": "string",
            "enum": [
              "COLL",
              "DEV",
              "PROD",
              "ROOT"
            ]
          },
          "partyId": {
            "type": "string"
          },
          "relationshipId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN_EA",
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          }
        }
      },
      "UserInstitutionResource": {
        "title": "UserInstitutionResource",
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the user-institution association record."
          },
          "institutionDescription": {
            "type": "string",
            "description": "Institution's description"
          },
          "institutionId": {
            "type": "string",
            "description": "Institution's unique internal Id"
          },
          "institutionRootName": {
            "type": "string",
            "description": "The root name of the institution"
          },
          "products": {
            "type": "array",
            "description": "Object that includes all info about onboarded institutions linked to a user",
            "items": {
              "$ref": "#/components/schemas/UserProductResource"
            }
          },
          "userId": {
            "type": "string",
            "description": "User's unique identifier"
          }
        }
      },
      "UserProductResource": {
        "title": "UserProductResource",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "string",
            "description": "Product's identifier"
          },
          "productRole": {
            "type": "string",
            "description": "The specific role of the user related to the product."
          },
          "productRoleLabel": {
            "type": "string",
            "description": "The specific role label of the user related to the product."
          },
          "role": {
            "type": "string",
            "description": "Available values: MANAGER, DELEGATE, SUB_DELEGATE, OPERATOR, ADMIN_EA"
          },
          "status": {
            "type": "string",
            "description": "The current status of the user on the product. <br>Available values: ACTIVE, PENDING, TOBEVALIDATED, SUSPENDED, DELETED, REJECTED"
          },
          "tokenId": {
            "type": "string",
            "description": "A unique identifier for the token associated with the product."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserInfoResource": {
        "title": "UserInfoResource",
        "type": "object",
        "properties": {
          "onboardedInstitutions": {
            "type": "array",
            "description": "Object that includes all info about onboarded institutions linked to a user",
            "items": {
              "$ref": "#/components/schemas/OnboardedInstitutionResource"
            }
          },
          "user": {
            "description": "Object that includes all info about a user",
            "$ref": "#/components/schemas/UserResource"
          }
        }
      },
      "OnboardedInstitutionResource": {
        "title": "OnboardedInstitutionResource",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Institution's address"
          },
          "description": {
            "type": "string",
            "description": "Institution's description"
          },
          "digitalAddress": {
            "type": "string",
            "description": "Institution's digital address"
          },
          "id": {
            "type": "string",
            "description": "Institution's Id"
          },
          "institutionType": {
            "type": "string",
            "description": "Institution's type",
            "enum": [
              "AS",
              "CON",
              "GSP",
              "PA",
              "PG",
              "PRV",
              "PSP",
              "PT",
              "REC",
              "SA",
              "SCP"
            ]
          },
          "productInfo": {
            "description": "Products' info of onboardings",
            "$ref": "#/components/schemas/ProductInfo"
          },
          "state": {
            "type": "string",
            "description": "Onboarding's state"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's tax code"
          },
          "userEmail": {
            "type": "string",
            "description": "User's email linked to the institution"
          },
          "zipCode": {
            "type": "string",
            "description": "Institution's zip code"
          }
        }
      },
      "ProductInfo": {
        "title": "ProductInfo",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "productRole": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SearchUserDto": {
        "title": "SearchUserDto",
        "required": [
          "fiscalCode"
        ],
        "type": "object",
        "properties": {
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "statuses": {
            "type": "array",
            "description": "User's statuses",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "DELETED",
                "PENDING",
                "REJECTED",
                "SUSPENDED",
                "TOBEVALIDATED"
              ]
            }
          }
        }
      },
      "PageOfUserGroupResource": {
        "title": "PageOfUserGroupResource",
        "required": [
          "content",
          "number",
          "size",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "The page content",
            "items": {
              "$ref": "#/components/schemas/UserGroupResource"
            }
          },
          "number": {
            "type": "integer",
            "description": "The number of the current page",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "The size of the page",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "description": "The total amount of elements",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "description": "The number of total pages",
            "format": "int32"
          }
        }
      },
      "InstitutionResource": {
        "title": "InstitutionResource",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Institution's physical address"
          },
          "aooParentCode": {
            "type": "string",
            "description": "AOO unit parent institution Code"
          },
          "assistanceContacts": {
            "description": "Institution's assistance contacts",
            "$ref": "#/components/schemas/AssistanceContactsResource"
          },
          "city": {
            "type": "string",
            "description": "Institution's physical address city"
          },
          "companyInformations": {
            "description": "GPS, SCP, PT optional data",
            "$ref": "#/components/schemas/CompanyInformationsResource"
          },
          "country": {
            "type": "string",
            "description": "Institution's physical address country"
          },
          "county": {
            "type": "string",
            "description": "Institution's physical address county"
          },
          "description": {
            "type": "string",
            "description": "Institution's legal name"
          },
          "digitalAddress": {
            "type": "string",
            "description": "Institution's digitalAddress"
          },
          "dpoData": {
            "description": "Data Protection Officer (DPO) specific data",
            "$ref": "#/components/schemas/DpoDataResource"
          },
          "externalId": {
            "type": "string",
            "description": "Institution's unique external identifier"
          },
          "id": {
            "type": "string",
            "description": "Institution's unique internal Id",
            "format": "uuid"
          },
          "institutionType": {
            "type": "string",
            "description": "Institution's type",
            "enum": [
              "AS",
              "GSP",
              "PA",
              "PG",
              "PSP",
              "PT",
              "SA",
              "SCP",
              "REC",
              "CON"
            ]
          },
          "origin": {
            "type": "string",
            "description": "Institution data origin"
          },
          "originId": {
            "type": "string",
            "description": "Institution's details origin Id"
          },
          "pspData": {
            "description": "Payment Service Provider (PSP) specific data",
            "$ref": "#/components/schemas/PspDataResource"
          },
          "recipientCode": {
            "type": "string",
            "description": "Billing recipient code, not required only for institutionType SA"
          },
          "rootParent": {
            "description": "Institution AOO/UO root institutionDescription",
            "$ref": "#/components/schemas/RootParentResource"
          },
          "status": {
            "type": "string",
            "description": "Institution onboarding status"
          },
          "subunitCode": {
            "type": "string",
            "description": "Institutions AOO/UO unit Code"
          },
          "subunitType": {
            "type": "string",
            "description": "Institutions AOO/UO unit type"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's taxCode"
          },
          "userProductRoles": {
            "type": "array",
            "description": "Logged user's roles on product",
            "items": {
              "type": "string"
            }
          },
          "zipCode": {
            "type": "string",
            "description": "Institution's zipCode"
          }
        }
      },
      "AssistanceContactsResource": {
        "title": "AssistanceContactsResource",
        "type": "object",
        "properties": {
          "supportEmail": {
            "type": "string",
            "description": "Institution's support email contact"
          },
          "supportPhone": {
            "type": "string",
            "description": "Institution's support phone contact"
          }
        }
      },
      "CompanyInformationsResource": {
        "title": "CompanyInformationsResource",
        "type": "object",
        "properties": {
          "businessRegisterPlace": {
            "type": "string",
            "description": "Institution's business register place"
          },
          "rea": {
            "type": "string",
            "description": "Institution's REA"
          },
          "shareCapital": {
            "type": "string",
            "description": "Institution's share capital value"
          }
        }
      },
      "DpoDataResource": {
        "title": "DpoDataResource",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "DPO's address"
          },
          "email": {
            "type": "string",
            "description": "DPO's email",
            "format": "email",
            "example": "email@example.com"
          },
          "pec": {
            "type": "string",
            "description": "DPO's PEC",
            "format": "email",
            "example": "email@example.com"
          }
        }
      },
      "RootParentResource": {
        "title": "RootParentResource",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "swagger.external_api.institutions.model.parentDescription"
          },
          "id": {
            "type": "string",
            "description": "Institution's unique internal Id"
          }
        }
      },
      "PspDataResource": {
        "title": "PspDataResource",
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string",
            "description": "PSP's ABI code"
          },
          "businessRegisterNumber": {
            "type": "string",
            "description": "PSP's Business Register number"
          },
          "legalRegisterName": {
            "type": "string",
            "description": "PSP's legal register name"
          },
          "legalRegisterNumber": {
            "type": "string",
            "description": "PSP's legal register number"
          },
          "vatNumberGroup": {
            "type": "boolean",
            "description": "PSP's Vat Number group",
            "example": false
          }
        }
      },
      "UserGroupResource": {
        "title": "UserGroupResource",
        "required": [
          "description",
          "id",
          "institutionId",
          "name",
          "productId",
          "status"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Date on which the group was created",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "User by which the group was created"
          },
          "description": {
            "type": "string",
            "description": "Users group's description"
          },
          "id": {
            "type": "string",
            "description": "Users group's unique identifier"
          },
          "institutionId": {
            "type": "string",
            "description": "Users group's institutionId"
          },
          "members": {
            "type": "array",
            "description": "List of all the members of the group",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "modifiedAt": {
            "type": "string",
            "description": "Date on which the group was modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": "User by which the group was modified"
          },
          "name": {
            "type": "string",
            "description": "Users group's name"
          },
          "productId": {
            "type": "string",
            "description": "Users group's productId"
          },
          "status": {
            "type": "string",
            "description": "Users group's status",
            "enum": [
              "ACTIVE",
              "DELETED",
              "SUSPENDED"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}