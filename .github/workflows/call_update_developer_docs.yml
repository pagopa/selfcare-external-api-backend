on:
    workflow_call:
      inputs:
        env:
          type: string
          description: Environment
          required: true
        api_folder_path:
          type: string
          description: Path of API folder
          required: true
          #/api/ms_external_api/v2
        docs_openapi_path:
          type: string
          description: Path of docs storage openapi
          required: true
         #developer/external/v2/ms-external-api.json

env:
  DIR: "./infra/apim_v2"
  ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_STORAGE_USE_AZUREAD: true

jobs:
  detect:
    name: 'Detect'
    runs-on: ubuntu-20.04
    environment: ${{ inputs.env }}-cd
    permissions:
      id-token: write
      contents: read

    steps:

        - name: Checkout
          id: checkout
          uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707
  
        - name: Azure Login
          uses: azure/login@cb79c773a3cfa27f31f25eb3f677781210c9ce3d # v1.6.1
          with:
            client-id: ${{ secrets.ARM_CLIENT_ID }}
            tenant-id: ${{ vars.ARM_TENANT_ID }}
            subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}
  
        - name: Extract environment short
          id: extract_env_short
          shell: bash
          run: |
            env=${{ inputs.env }}
            echo "env_short=${env:0:1}" >> $GITHUB_OUTPUT
            echo "checkout_cdn_name=selc-${env:0:1}-checkout-cdn-endpoint" >> $GITHUB_OUTPUT
            echo "checkout_cdn_profile=selc-${env:0:1}-checkout-cdn-profile" >> $GITHUB_OUTPUT
  
        - name: Upload to blob storage
          uses: azure/CLI@965c8d7571d2231a54e321ddd07f7b10317f34d9 # v2
          with:
            inlineScript: |
              az storage blob upload --auth-mode key \
                --container '$web' \
                --account-name selc${{ steps.extract_env_short.outputs.env_short }}checkoutsa \
                --file "${{ env.DIR }}${{ inputs.api_folder_path }}/openapi.${{ inputs.env }}.json" \
                --overwrite true \
                --name '${{ inputs.docs_openapi_path }}' &&
              az cdn endpoint purge \
                --resource-group selc-${{ steps.extract_env_short.outputs.env_short }}-checkout-fe-rg \
                --name ${{ steps.extract_env_short.outputs.checkout_cdn_name }} \
                --profile-name ${{ steps.extract_env_short.outputs.checkout_cdn_profile }} \
                --content-paths "${{ inputs.docs_openapi_path }}" \
                --no-wait