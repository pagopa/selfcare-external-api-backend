on:
    workflow_call:
      inputs:
        env:
          type: string
          description: Environment
          required: true
        api_folder_path:
          type: string
          description: Path of API folder
          required: true
          #/api/ms_external_api/v2
        docs_openapi_path:
          type: string
          description: Path of docs storage openapi
          required: true
         #developer/external/v2/ms-external-api.json
        api_title:
          type: string
          description: Title of API to show on message
          required: true
        enable_notification:
          required: true
          type: boolean
          default: true
    
      secrets:
        API_NOTIFICATION_TRIGGERS_ID:
          required: true
        ARM_CLIENT_ID:
          required: true

env:
  DIR: "./infra/apim_v2"
  ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_STORAGE_USE_AZUREAD: true

jobs:
  detect:
    name: 'Update Developer Docs And Sending Slack notification'
    runs-on: ubuntu-20.04
    environment: ${{ inputs.env }}-cd
    permissions:
      id-token: write
      contents: read

    steps:

        - name: Checkout
          id: checkout
          uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707
  
        - name: Azure Login
          uses: azure/login@cb79c773a3cfa27f31f25eb3f677781210c9ce3d # v1.6.1
          with:
            client-id: ${{ secrets.ARM_CLIENT_ID }}
            tenant-id: ${{ vars.ARM_TENANT_ID }}
            subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

        - name: Extract environment short
          id: extract_env_short
          shell: bash
          run: |
            env=${{ inputs.env }}
            echo "env_short=${env:0:1}" >> $GITHUB_OUTPUT
            echo "checkout_cdn_name=selc-${env:0:1}-checkout-cdn-endpoint" >> $GITHUB_OUTPUT
            echo "checkout_cdn_profile=selc-${env:0:1}-checkout-cdn-profile" >> $GITHUB_OUTPUT
    
        - name: Download Developer OpenAPI from blob storage
          uses: azure/CLI@965c8d7571d2231a54e321ddd07f7b10317f34d9 # v2
          with:
            inlineScript: |
              mkdir docs
              az storage blob download-batch --auth-mode key -d ./docs/ --account-name selc${{ steps.extract_env_short.outputs.env_short }}checkoutsa  -s '$web' --pattern ${{ inputs.docs_openapi_path }}

        - name: Install Optic
          run: npm install --location global @useoptic/optic
          shell: bash

        - name: Verify if Operation Changes
          id: optic_diff
          shell: bash
          run: |
            optic_output=$(optic diff ./docs/${{ inputs.docs_openapi_path }} ${{ env.DIR }}${{ inputs.api_folder_path }}/openapi.${{ inputs.env }}.json)
            echo "$optic_output"
            echo "$optic_output" > optic_diff_output.txt
            if grep -q "Operations: No operations changed" optic_diff_output.txt; then
              echo "changes_detected=false" >> $GITHUB_OUTPUT
            else
              echo "changes_detected=true" >> $GITHUB_OUTPUT
            fi

        - name: Upload to blob storage
          uses: azure/CLI@965c8d7571d2231a54e321ddd07f7b10317f34d9 # v2
          if: ${{ steps.optic_diff.outputs.changes_detected == 'true'}}
          with:
            inlineScript: |
              az storage blob upload --auth-mode key \
                --container '$web' \
                --account-name selc${{ steps.extract_env_short.outputs.env_short }}checkoutsa \
                --file "${{ env.DIR }}${{ inputs.api_folder_path }}/openapi.${{ inputs.env }}.json" \
                --overwrite true \
                --name '/${{ inputs.docs_openapi_path }}' &&
              az cdn endpoint purge \
                --resource-group selc-${{ steps.extract_env_short.outputs.env_short }}-checkout-fe-rg \
                --name ${{ steps.extract_env_short.outputs.checkout_cdn_name }} \
                --profile-name ${{ steps.extract_env_short.outputs.checkout_cdn_profile }} \
                --content-paths "/${{ inputs.docs_openapi_path }}" \
                --no-wait

        - name: Extract changes MD
          if: ${{ inputs.enable_notification && steps.optic_diff.outputs.changes_detected == 'true' }}
          id: extract_change_md
          shell: bash
          run: |
            changed_operations=$(awk '/Operations/{flag=1; next} /Rerun this/{flag=0} flag' optic_diff_output.txt)
            echo "$changed_operations"
            echo "$changed_operations" > changed_operations.txt

        - name: Send HTTP POST notification using Slack
          if: ${{ inputs.enable_notification && steps.optic_diff.outputs.changes_detected == 'true' }}
          run: |
            body_content=$(cat changed_operations.txt)
            curl -X POST https://hooks.slack.com/triggers/${{ secrets.API_NOTIFICATION_TRIGGERS_ID }} \
            -H "Content-Type: application/json" \
            -d '{
                  "body": "'"$body_content"'",
                  "title": "${{ inputs.api_title }}"
                }'